[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "esm/.external-ecmascript.js",
    "static": true,
    "longname": "esm/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 49,
    "kind": "external",
    "name": "Observable",
    "externalLink": "http://reactivex.io/rxjs/class/es6/Observable.js~Observable.html",
    "memberof": "esm/.externals.js",
    "static": true,
    "longname": "esm/.externals.js~Observable",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 50,
    "kind": "external",
    "name": "Observer",
    "externalLink": "http://reactivex.io/rxjs/class/es6/MiscJSDoc.js~ObserverDoc.html",
    "memberof": "esm/.externals.js",
    "static": true,
    "longname": "esm/.externals.js~Observer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 51,
    "kind": "external",
    "name": "SubscribableOrPromise",
    "externalLink": "http://reactivex.io/rxjs/class/es6/MiscJSDoc.js~SubscribableOrPromiseDoc.html",
    "memberof": "esm/.externals.js",
    "static": true,
    "longname": "esm/.externals.js~SubscribableOrPromise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 52,
    "kind": "external",
    "name": "Notification",
    "externalLink": "http://reactivex.io/rxjs/class/es6/Notification.js~Notification.html",
    "memberof": "esm/.externals.js",
    "static": true,
    "longname": "esm/.externals.js~Notification",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 53,
    "kind": "file",
    "name": "esm/actions/index.js",
    "content": "/**\n * @param {string} type Action type\n * @param {?PayloadType} payload Action payload\n * @return {Action<string> | ActionWithPayload<string, PayloadType>}\n */\nexport function createAction(type, payload) {\n    if (arguments.length === 1) {\n        return { type };\n    }\n    return { type, payload };\n}\n/**\n * @param {string} type Action type\n * @return {function(payload: PayloadType): ActionWithPayload<string, PayloadType>}\n */\nexport function toAction(type) {\n    return payload => createAction(type, payload);\n}\n/**\n * @typedef {Object} Action\n * @property {string} type Action type\n */\n/**\n * @typedef {Action} ActionWithPayload\n * @property {string} type Action type\n * @property {PayloadType} payload Action payload\n */\n//# sourceMappingURL=index.js.map",
    "static": true,
    "longname": "/home/topaxi/rxtask/dist/esm/actions/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 54,
    "kind": "function",
    "name": "createAction",
    "memberof": "esm/actions/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/actions/index.js~createAction",
    "access": "public",
    "export": true,
    "importPath": "rxtask/actions",
    "importStyle": "{createAction}",
    "description": "",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "Action type"
      },
      {
        "nullable": true,
        "types": [
          "PayloadType"
        ],
        "spread": false,
        "optional": false,
        "name": "payload",
        "description": "Action payload"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Action<string> | ActionWithPayload<string, PayloadType>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 55,
    "kind": "function",
    "name": "toAction",
    "memberof": "esm/actions/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/actions/index.js~toAction",
    "access": "public",
    "export": true,
    "importPath": "rxtask/actions",
    "importStyle": "{toAction}",
    "description": "",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "Action type"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function(payload: PayloadType): ActionWithPayload<string, PayloadType>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 56,
    "kind": "typedef",
    "name": "Action",
    "memberof": "esm/actions/index.js",
    "static": true,
    "longname": "esm/actions/index.js~Action",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "Action type"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "Action"
    }
  },
  {
    "__docId__": 57,
    "kind": "typedef",
    "name": "ActionWithPayload",
    "memberof": "esm/actions/index.js",
    "static": true,
    "longname": "esm/actions/index.js~ActionWithPayload",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "Action type"
      },
      {
        "nullable": null,
        "types": [
          "PayloadType"
        ],
        "spread": false,
        "optional": false,
        "name": "payload",
        "description": "Action payload"
      }
    ],
    "type": {
      "types": [
        "Action"
      ],
      "optional": false,
      "name": "ActionWithPayload"
    }
  },
  {
    "__docId__": 58,
    "kind": "file",
    "name": "esm/actions/task/index.js",
    "content": "/** @type {string} */\nexport const TASK_INSTANCE_STATE_UPDATE_ACTION = '[Task] Task instance state update';\n//# sourceMappingURL=index.js.map",
    "static": true,
    "longname": "/home/topaxi/rxtask/dist/esm/actions/task/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 59,
    "kind": "variable",
    "name": "TASK_INSTANCE_STATE_UPDATE_ACTION",
    "memberof": "esm/actions/task/index.js",
    "static": true,
    "longname": "esm/actions/task/index.js~TASK_INSTANCE_STATE_UPDATE_ACTION",
    "access": "public",
    "export": true,
    "importPath": "rxtask/actions/task",
    "importStyle": "{TASK_INSTANCE_STATE_UPDATE_ACTION}",
    "description": null,
    "lineNumber": 2,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 60,
    "kind": "file",
    "name": "esm/actions/task-instance/index.js",
    "content": "import { createAction } from '..';\n/** @type {string} */\nexport const NOTIFICATION_ACTION = '[TaskInstance] Notificiation';\n/**\n * @param {Notification<T>} n\n * @return {NotificationAction<T>}\n */\nexport function createNotificationAction(n) {\n    return createAction(NOTIFICATION_ACTION, n);\n}\n/**\n * @typedef {ActionWithPayload} NotificationAction\n * @property {string} type\n * @property {Notification<T>} payload\n */\n//# sourceMappingURL=index.js.map",
    "static": true,
    "longname": "/home/topaxi/rxtask/dist/esm/actions/task-instance/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 61,
    "kind": "variable",
    "name": "NOTIFICATION_ACTION",
    "memberof": "esm/actions/task-instance/index.js",
    "static": true,
    "longname": "esm/actions/task-instance/index.js~NOTIFICATION_ACTION",
    "access": "public",
    "export": true,
    "importPath": "rxtask/actions/task-instance",
    "importStyle": "{NOTIFICATION_ACTION}",
    "description": null,
    "lineNumber": 3,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 62,
    "kind": "function",
    "name": "createNotificationAction",
    "memberof": "esm/actions/task-instance/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/actions/task-instance/index.js~createNotificationAction",
    "access": "public",
    "export": true,
    "importPath": "rxtask/actions/task-instance",
    "importStyle": "{createNotificationAction}",
    "description": "",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "Notification<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "NotificationAction<T>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 63,
    "kind": "typedef",
    "name": "NotificationAction",
    "memberof": "esm/actions/task-instance/index.js",
    "static": true,
    "longname": "esm/actions/task-instance/index.js~NotificationAction",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Notification<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "payload",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "ActionWithPayload"
      ],
      "optional": false,
      "name": "NotificationAction"
    }
  },
  {
    "__docId__": 64,
    "kind": "file",
    "name": "esm/index.js",
    "content": "export * from './task-instance';\nexport * from './task';\n//# sourceMappingURL=index.js.map",
    "static": true,
    "longname": "/home/topaxi/rxtask/dist/esm/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 65,
    "kind": "file",
    "name": "esm/interfaces.js",
    "content": "/**\n * @typedef {UnaryFunction<T, SubscribableOrPromise<U>>} TaskCallback\n */\n//# sourceMappingURL=interfaces.js.map",
    "static": true,
    "longname": "/home/topaxi/rxtask/dist/esm/interfaces.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 66,
    "kind": "typedef",
    "name": "TaskCallback",
    "memberof": "esm/interfaces.js",
    "static": true,
    "longname": "esm/interfaces.js~TaskCallback",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "UnaryFunction<T, SubscribableOrPromise<U>>"
      ],
      "optional": false,
      "name": "TaskCallback"
    }
  },
  {
    "__docId__": 67,
    "kind": "file",
    "name": "esm/operators/action-reducer.js",
    "content": "import { scan, startWith } from 'rxjs/operators';\nconst EMPTY_ACTION = { type: 'EMPTY_ACTION' };\n/**\n * @param {ActionReducerFunction} reducer\n * @return {OperatorFunction<T, R>}\n */\nexport function actionReducer(reducer) {\n    return in$ => {\n        const INITIAL_STATE = reducer(undefined, EMPTY_ACTION);\n        return in$.pipe(scan(reducer, INITIAL_STATE), startWith(INITIAL_STATE));\n    };\n}\n/**\n * @typedef {function(acc: ?Object, value: Action<string>): Object} ActionReducerFunction\n */\n//# sourceMappingURL=action-reducer.js.map",
    "static": true,
    "longname": "/home/topaxi/rxtask/dist/esm/operators/action-reducer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 68,
    "kind": "variable",
    "name": "EMPTY_ACTION",
    "memberof": "esm/operators/action-reducer.js",
    "static": true,
    "longname": "esm/operators/action-reducer.js~EMPTY_ACTION",
    "access": "public",
    "export": false,
    "importPath": "rxtask/operators/action-reducer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "{\"type\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 69,
    "kind": "function",
    "name": "actionReducer",
    "memberof": "esm/operators/action-reducer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/operators/action-reducer.js~actionReducer",
    "access": "public",
    "export": true,
    "importPath": "rxtask/operators/action-reducer.js",
    "importStyle": "{actionReducer}",
    "description": "",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "ActionReducerFunction"
        ],
        "spread": false,
        "optional": false,
        "name": "reducer",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "OperatorFunction<T, R>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 70,
    "kind": "typedef",
    "name": "ActionReducerFunction",
    "memberof": "esm/operators/action-reducer.js",
    "static": true,
    "longname": "esm/operators/action-reducer.js~ActionReducerFunction",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "function(acc: ?Object, value: Action<string>): Object"
      ],
      "optional": false,
      "name": "ActionReducerFunction"
    }
  },
  {
    "__docId__": 71,
    "kind": "file",
    "name": "esm/operators/filter-not-null.js",
    "content": "import { filter } from 'rxjs/operators';\nimport { notNull } from '../utils';\n/**\n * @return {NotNullFilter<T>}\n */\nexport const filterNotNull = () => filter(notNull);\n/**\n * @typedef {function(value: T): NotNull<T>} NotNullFilter\n */\n//# sourceMappingURL=filter-not-null.js.map",
    "static": true,
    "longname": "/home/topaxi/rxtask/dist/esm/operators/filter-not-null.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 72,
    "kind": "function",
    "name": "filterNotNull",
    "memberof": "esm/operators/filter-not-null.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/operators/filter-not-null.js~filterNotNull",
    "access": "public",
    "export": true,
    "importPath": "rxtask/operators/filter-not-null.js",
    "importStyle": "{filterNotNull}",
    "description": "",
    "lineNumber": 6,
    "return": {
      "nullable": null,
      "types": [
        "NotNullFilter<T>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 73,
    "kind": "typedef",
    "name": "NotNullFilter",
    "memberof": "esm/operators/filter-not-null.js",
    "static": true,
    "longname": "esm/operators/filter-not-null.js~NotNullFilter",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "function(value: T): NotNull<T>"
      ],
      "optional": false,
      "name": "NotNullFilter"
    }
  },
  {
    "__docId__": 74,
    "kind": "file",
    "name": "esm/operators/index.js",
    "content": "export * from './action-reducer';\nexport * from './filter-not-null';\nexport * from './map-non-null';\n//# sourceMappingURL=index.js.map",
    "static": true,
    "longname": "/home/topaxi/rxtask/dist/esm/operators/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 75,
    "kind": "file",
    "name": "esm/operators/map-non-null.js",
    "content": "import { map } from 'rxjs/operators';\nimport { filterNotNull } from './filter-not-null';\n/**\n * @param {UnaryFunction<T, R>} project\n * @return {MapNonNullFunction<T, R>}\n */\nexport const mapNonNull = (project) => in$ => in$.pipe(map(project), filterNotNull());\n/**\n * @typedef {function(value: T): NotNull<R>} MapNonNullFunction\n */\n//# sourceMappingURL=map-non-null.js.map",
    "static": true,
    "longname": "/home/topaxi/rxtask/dist/esm/operators/map-non-null.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 76,
    "kind": "function",
    "name": "mapNonNull",
    "memberof": "esm/operators/map-non-null.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/operators/map-non-null.js~mapNonNull",
    "access": "public",
    "export": true,
    "importPath": "rxtask/operators/map-non-null.js",
    "importStyle": "{mapNonNull}",
    "description": "",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "UnaryFunction<T, R>"
        ],
        "spread": false,
        "optional": false,
        "name": "project",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "MapNonNullFunction<T, R>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 77,
    "kind": "typedef",
    "name": "MapNonNullFunction",
    "memberof": "esm/operators/map-non-null.js",
    "static": true,
    "longname": "esm/operators/map-non-null.js~MapNonNullFunction",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "function(value: T): NotNull<R>"
      ],
      "optional": false,
      "name": "MapNonNullFunction"
    }
  },
  {
    "__docId__": 78,
    "kind": "file",
    "name": "esm/reducers/task/index.js",
    "content": "import { assertNever, neq, EMPTY_ARRAY, pipe } from '../../utils';\nimport * as taskActions from '../../actions/task';\n/** @access private */\nexport const combineTaskInstanceWithStateLabel = (taskInstance, taskInstanceStateLabel) => ({\n    taskInstance,\n    taskInstanceStateLabel,\n});\n/**\n * @type {TaskState<any>}\n * @access private\n */\nexport const INITIAL_STATE = {\n    performed: 0,\n    pending: EMPTY_ARRAY,\n    running: EMPTY_ARRAY,\n    successful: 0,\n    cancelled: 0,\n    errored: 0,\n    completed: 0,\n    last: null,\n    lastRunning: null,\n    lastSuccessful: null,\n    lastCancelled: null,\n    lastErrored: null,\n    lastCompleted: null,\n};\nfunction taskInstanceStateReducer(state, { taskInstance, taskInstanceStateLabel }) {\n    switch (taskInstanceStateLabel) {\n        case \"pending\" /* PENDING */:\n            return Object.assign({}, state, { performed: state.performed + 1, pending: [...state.pending, taskInstance], last: taskInstance });\n        case \"running\" /* RUNNING */:\n            return Object.assign({}, taskNoLonger(state, taskInstance, 'pending'), { running: [...state.running, taskInstance], lastRunning: taskInstance });\n        case \"cancelled\" /* CANCELLED */:\n            return Object.assign({}, pipe(state, state => taskNoLonger(state, taskInstance, 'pending'), state => taskNoLonger(state, taskInstance, 'running')), { cancelled: state.cancelled + 1, lastCancelled: taskInstance });\n        case \"error\" /* ERROR */:\n            return Object.assign({}, taskCompleted(state, taskInstance), { errored: state.errored + 1, lastErrored: taskInstance });\n        case \"complete\" /* COMPLETE */:\n            return Object.assign({}, taskCompleted(state, taskInstance), { successful: state.successful + 1, lastSuccessful: taskInstance });\n        default:\n            return assertNever(taskInstanceStateLabel);\n    }\n}\n/**\n * @param {TaskState<T>} [state=INITIAL_STATE]\n * @param {TaskActions<T>} action\n * @return {TaskState<T>}\n */\nexport function reducer(state = INITIAL_STATE, action) {\n    switch (action.type) {\n        case taskActions.TASK_INSTANCE_STATE_UPDATE_ACTION:\n            return taskInstanceStateReducer(state, action.payload);\n        default:\n            return state;\n    }\n}\nfunction taskNoLonger(state, task, taskState) {\n    return Object.assign({}, state, { [taskState]: state[taskState].filter(neq(task)) });\n}\nfunction taskCompleted(state, task) {\n    return Object.assign({}, pipe(state, state => taskNoLonger(state, task, 'pending'), state => taskNoLonger(state, task, 'running')), { completed: state.completed + 1, lastCompleted: task });\n}\n/**\n * @param {TaskState<T>} s\n * @return number\n */\nexport const selectPerformed = (s) => s.performed;\n/**\n * @param {TaskState<T>} s\n * @return {Array<TaskInstance<T>>}\n */\nexport const selectPending = (s) => s.pending;\n/**\n * @param {TaskState<T>} s\n * @return {Array<TaskInstance<T>>}\n */\nexport const selectRunning = (s) => s.running;\n/**\n * @param {TaskState<T>} s\n * @return {number}\n */\nexport const selectSuccessful = (s) => s.successful;\n/**\n * @param {TaskState<T>} s\n * @return {number}\n */\nexport const selectCancelled = (s) => s.cancelled;\n/**\n * @param {TaskState<T>} s\n * @return {number}\n */\nexport const selectErrored = (s) => s.errored;\n/**\n * @param {TaskState<T>} s\n * @return {number}\n */\nexport const selectCompleted = (s) => s.completed;\n/**\n * @param {TaskState<T>} s\n * @return {TaskInstance<T>}\n */\nexport const selectLast = (s) => s.last;\n/**\n * @param {TaskState<T>} s\n * @return {TaskInstance<T>}\n */\nexport const selectLastRunning = (s) => s.lastRunning;\n/**\n * @param {TaskState<T>} s\n * @return {TaskInstance<T>}\n */\nexport const selectLastSuccessful = (s) => s.lastSuccessful;\n/**\n * @param {TaskState<T>} s\n * @return {TaskInstance<T>}\n */\nexport const selectLastCancelled = (s) => s.lastCancelled;\n/**\n * @param {TaskState<T>} s\n * @return {TaskInstance<T>}\n */\nexport const selectLastErrored = (s) => s.lastErrored;\n/**\n * @param {TaskState<T>} s\n * @return {TaskInstance<T>}\n */\nexport const selectLastCompleted = (s) => s.lastCompleted;\n/**\n * @typedef {Object} TaskState\n * @property {number} performed\n * @property {Array<TaskInstance<T>>} pending\n * @property {Array<TaskInstance<T>>} running\n * @property {number} successful\n * @property {number} cancelled\n * @property {number} errored\n * @property {number} completed\n * @property {?TaskInstance<T>} last\n * @property {?TaskInstance<T>} lastRunning\n * @property {?TaskInstance<T>} lastSuccessful\n * @property {?TaskInstance<T>} lastCancelled\n * @property {?TaskInstance<T>} lastErrored\n * @property {?TaskInstance<T>} lastCompleted\n */\n/**\n * @typedef {{ taskInstance: TaskInstance<T>, taskInstanceState: TaskInstanceState }} TaskInstanceWithState\n * @access private\n */\n//# sourceMappingURL=index.js.map",
    "static": true,
    "longname": "/home/topaxi/rxtask/dist/esm/reducers/task/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 79,
    "kind": "function",
    "name": "combineTaskInstanceWithStateLabel",
    "memberof": "esm/reducers/task/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/reducers/task/index.js~combineTaskInstanceWithStateLabel",
    "access": "private",
    "export": true,
    "importPath": "rxtask/reducers/task",
    "importStyle": "{combineTaskInstanceWithStateLabel}",
    "description": null,
    "lineNumber": 4,
    "params": [
      {
        "name": "taskInstance",
        "types": [
          "*"
        ]
      },
      {
        "name": "taskInstanceStateLabel",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 80,
    "kind": "variable",
    "name": "INITIAL_STATE",
    "memberof": "esm/reducers/task/index.js",
    "static": true,
    "longname": "esm/reducers/task/index.js~INITIAL_STATE",
    "access": "private",
    "export": true,
    "importPath": "rxtask/reducers/task",
    "importStyle": "{INITIAL_STATE}",
    "description": "",
    "lineNumber": 12,
    "type": {
      "nullable": null,
      "types": [
        "TaskState<any>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 81,
    "kind": "function",
    "name": "taskInstanceStateReducer",
    "memberof": "esm/reducers/task/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/reducers/task/index.js~taskInstanceStateReducer",
    "access": "public",
    "export": false,
    "importPath": "rxtask/reducers/task",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "objectPattern1",
        "types": [
          "{\"taskInstance\": *, \"taskInstanceStateLabel\": *}"
        ],
        "defaultRaw": {
          "taskInstance": null,
          "taskInstanceStateLabel": null
        },
        "defaultValue": "{\"taskInstance\":null,\"taskInstanceStateLabel\":null}"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 82,
    "kind": "function",
    "name": "reducer",
    "memberof": "esm/reducers/task/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/reducers/task/index.js~reducer",
    "access": "public",
    "export": true,
    "importPath": "rxtask/reducers/task",
    "importStyle": "{reducer}",
    "description": "",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "TaskState<T>"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "INITIAL_STATE",
        "defaultRaw": "INITIAL_STATE",
        "name": "state",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "TaskActions<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TaskState<T>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 83,
    "kind": "function",
    "name": "taskNoLonger",
    "memberof": "esm/reducers/task/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/reducers/task/index.js~taskNoLonger",
    "access": "public",
    "export": false,
    "importPath": "rxtask/reducers/task",
    "importStyle": null,
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "task",
        "types": [
          "*"
        ]
      },
      {
        "name": "taskState",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 84,
    "kind": "function",
    "name": "taskCompleted",
    "memberof": "esm/reducers/task/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/reducers/task/index.js~taskCompleted",
    "access": "public",
    "export": false,
    "importPath": "rxtask/reducers/task",
    "importStyle": null,
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "task",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 85,
    "kind": "function",
    "name": "selectPerformed",
    "memberof": "esm/reducers/task/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/reducers/task/index.js~selectPerformed",
    "access": "public",
    "export": true,
    "importPath": "rxtask/reducers/task",
    "importStyle": "{selectPerformed}",
    "description": "",
    "lineNumber": 66,
    "params": [
      {
        "nullable": null,
        "types": [
          "TaskState<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "number"
    }
  },
  {
    "__docId__": 86,
    "kind": "function",
    "name": "selectPending",
    "memberof": "esm/reducers/task/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/reducers/task/index.js~selectPending",
    "access": "public",
    "export": true,
    "importPath": "rxtask/reducers/task",
    "importStyle": "{selectPending}",
    "description": "",
    "lineNumber": 71,
    "params": [
      {
        "nullable": null,
        "types": [
          "TaskState<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<TaskInstance<T>>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 87,
    "kind": "function",
    "name": "selectRunning",
    "memberof": "esm/reducers/task/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/reducers/task/index.js~selectRunning",
    "access": "public",
    "export": true,
    "importPath": "rxtask/reducers/task",
    "importStyle": "{selectRunning}",
    "description": "",
    "lineNumber": 76,
    "params": [
      {
        "nullable": null,
        "types": [
          "TaskState<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array<TaskInstance<T>>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 88,
    "kind": "function",
    "name": "selectSuccessful",
    "memberof": "esm/reducers/task/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/reducers/task/index.js~selectSuccessful",
    "access": "public",
    "export": true,
    "importPath": "rxtask/reducers/task",
    "importStyle": "{selectSuccessful}",
    "description": "",
    "lineNumber": 81,
    "params": [
      {
        "nullable": null,
        "types": [
          "TaskState<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 89,
    "kind": "function",
    "name": "selectCancelled",
    "memberof": "esm/reducers/task/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/reducers/task/index.js~selectCancelled",
    "access": "public",
    "export": true,
    "importPath": "rxtask/reducers/task",
    "importStyle": "{selectCancelled}",
    "description": "",
    "lineNumber": 86,
    "params": [
      {
        "nullable": null,
        "types": [
          "TaskState<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 90,
    "kind": "function",
    "name": "selectErrored",
    "memberof": "esm/reducers/task/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/reducers/task/index.js~selectErrored",
    "access": "public",
    "export": true,
    "importPath": "rxtask/reducers/task",
    "importStyle": "{selectErrored}",
    "description": "",
    "lineNumber": 91,
    "params": [
      {
        "nullable": null,
        "types": [
          "TaskState<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 91,
    "kind": "function",
    "name": "selectCompleted",
    "memberof": "esm/reducers/task/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/reducers/task/index.js~selectCompleted",
    "access": "public",
    "export": true,
    "importPath": "rxtask/reducers/task",
    "importStyle": "{selectCompleted}",
    "description": "",
    "lineNumber": 96,
    "params": [
      {
        "nullable": null,
        "types": [
          "TaskState<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 92,
    "kind": "function",
    "name": "selectLast",
    "memberof": "esm/reducers/task/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/reducers/task/index.js~selectLast",
    "access": "public",
    "export": true,
    "importPath": "rxtask/reducers/task",
    "importStyle": "{selectLast}",
    "description": "",
    "lineNumber": 101,
    "params": [
      {
        "nullable": null,
        "types": [
          "TaskState<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TaskInstance<T>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 93,
    "kind": "function",
    "name": "selectLastRunning",
    "memberof": "esm/reducers/task/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/reducers/task/index.js~selectLastRunning",
    "access": "public",
    "export": true,
    "importPath": "rxtask/reducers/task",
    "importStyle": "{selectLastRunning}",
    "description": "",
    "lineNumber": 106,
    "params": [
      {
        "nullable": null,
        "types": [
          "TaskState<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TaskInstance<T>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 94,
    "kind": "function",
    "name": "selectLastSuccessful",
    "memberof": "esm/reducers/task/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/reducers/task/index.js~selectLastSuccessful",
    "access": "public",
    "export": true,
    "importPath": "rxtask/reducers/task",
    "importStyle": "{selectLastSuccessful}",
    "description": "",
    "lineNumber": 111,
    "params": [
      {
        "nullable": null,
        "types": [
          "TaskState<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TaskInstance<T>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 95,
    "kind": "function",
    "name": "selectLastCancelled",
    "memberof": "esm/reducers/task/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/reducers/task/index.js~selectLastCancelled",
    "access": "public",
    "export": true,
    "importPath": "rxtask/reducers/task",
    "importStyle": "{selectLastCancelled}",
    "description": "",
    "lineNumber": 116,
    "params": [
      {
        "nullable": null,
        "types": [
          "TaskState<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TaskInstance<T>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 96,
    "kind": "function",
    "name": "selectLastErrored",
    "memberof": "esm/reducers/task/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/reducers/task/index.js~selectLastErrored",
    "access": "public",
    "export": true,
    "importPath": "rxtask/reducers/task",
    "importStyle": "{selectLastErrored}",
    "description": "",
    "lineNumber": 121,
    "params": [
      {
        "nullable": null,
        "types": [
          "TaskState<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TaskInstance<T>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 97,
    "kind": "function",
    "name": "selectLastCompleted",
    "memberof": "esm/reducers/task/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/reducers/task/index.js~selectLastCompleted",
    "access": "public",
    "export": true,
    "importPath": "rxtask/reducers/task",
    "importStyle": "{selectLastCompleted}",
    "description": "",
    "lineNumber": 126,
    "params": [
      {
        "nullable": null,
        "types": [
          "TaskState<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TaskInstance<T>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 98,
    "kind": "typedef",
    "name": "TaskState",
    "memberof": "esm/reducers/task/index.js",
    "static": true,
    "longname": "esm/reducers/task/index.js~TaskState",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "performed",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<TaskInstance<T>>"
        ],
        "spread": false,
        "optional": false,
        "name": "pending",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array<TaskInstance<T>>"
        ],
        "spread": false,
        "optional": false,
        "name": "running",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "successful",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "cancelled",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "errored",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "completed",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "TaskInstance<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "last",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "TaskInstance<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "lastRunning",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "TaskInstance<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "lastSuccessful",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "TaskInstance<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "lastCancelled",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "TaskInstance<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "lastErrored",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "TaskInstance<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "lastCompleted",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "TaskState"
    }
  },
  {
    "__docId__": 99,
    "kind": "typedef",
    "name": "TaskInstanceWithState",
    "memberof": "esm/reducers/task/index.js",
    "static": true,
    "longname": "esm/reducers/task/index.js~TaskInstanceWithState",
    "access": "private",
    "description": "",
    "type": {
      "types": [
        "{ taskInstance: TaskInstance<T>, taskInstanceState: TaskInstanceState }"
      ],
      "optional": false,
      "name": "TaskInstanceWithState"
    }
  },
  {
    "__docId__": 100,
    "kind": "file",
    "name": "esm/reducers/task-instance/index.js",
    "content": "import * as taskInstanceActions from '../../actions/task-instance';\n/**\n * @type {TaskInstanceState<any>}\n */\nexport const RUNNING_STATE = {\n    stateLabel: \"running\" /* RUNNING */,\n    hasValue: false,\n    currentValue: undefined,\n    error: null,\n};\n/**\n * @type {TaskInstanceState<any>}\n */\nexport const PENDING_STATE = {\n    stateLabel: \"pending\" /* PENDING */,\n    hasValue: false,\n    currentValue: undefined,\n    error: null,\n};\n/**\n * @type {TaskInstanceState<any>}\n */\nexport const CANCELLED_STATE = {\n    stateLabel: \"cancelled\" /* CANCELLED */,\n    hasValue: false,\n    currentValue: undefined,\n    error: null,\n};\nfunction notificationReducer(s, n) {\n    switch (n.kind) {\n        case 'N':\n            return Object.assign({}, s, { stateLabel: \"running\" /* RUNNING */, hasValue: true, currentValue: n.value });\n        case 'E':\n            return Object.assign({}, s, { stateLabel: \"error\" /* ERROR */, error: n.error });\n        case 'C':\n            return Object.assign({}, s, { stateLabel: \"complete\" /* COMPLETE */ });\n        // istanbul ignore next\n        default:\n            return s;\n    }\n}\n/**\n * @param {TaskInstanceState<T>} [state=PENDING_STATE]\n * @param {TaskInstanceActions<T>} action\n * @return {TaskInstanceState<T>}\n */\nexport function reducer(state = PENDING_STATE, action) {\n    switch (action.type) {\n        case taskInstanceActions.NOTIFICATION_ACTION:\n            return notificationReducer(state, action.payload);\n        default:\n            return state;\n    }\n}\n/**\n * @param {TaskInstanceStateLabel} s\n * @return {boolean}\n */\nexport const isPending = (s) => s === \"pending\" /* PENDING */;\n/**\n * @param {TaskInstanceStateLabel} s\n * @return {boolean}\n */\nexport const isRunning = (s) => s === \"running\" /* RUNNING */;\n/**\n * @param {TaskInstanceStateLabel} s\n * @return {boolean}\n */\nexport const isError = (s) => s === \"error\" /* ERROR */;\n/**\n * @param {TaskInstanceStateLabel} s\n * @return {boolean}\n */\nexport const isCancelled = (s) => s === \"cancelled\" /* CANCELLED */;\n/**\n * @param {TaskInstanceStateLabel} s\n * @return {boolean}\n */\nexport const isComplete = (s) => s === \"complete\" /* COMPLETE */;\n/**\n * @param {TaskInstanceState<T>} s\n * @return {T}\n */\nexport const selectValue = (s) => s.currentValue;\n/**\n * @param {TaskInstanceState<T>} s\n * @return {boolean}\n */\nexport const selectHasValue = (s) => s.hasValue;\n/**\n * @param {TaskInstanceState<T>} s\n * @return {TaskInstanceStateLabel}\n */\nexport const selectStateLabel = (s) => s.stateLabel;\n/**\n * @param {TaskInstanceState<T>} s\n * @return {?Error}\n */\nexport const selectError = (s) => s.error;\n/**\n * @param {TaskInstanceState<T>} s\n * @return {boolean}\n */\nexport const hasValue = (s) => selectHasValue(s) && isRunning(s.stateLabel) !== isComplete(s.stateLabel);\n/**\n * @typedef {Object} TaskInstanceState\n * @property {TaskInstanceStateLabel} stateLabel\n * @property {boolean} hasValue\n * @property {?T} currentValue\n * @property {?Error} error\n */\n/**\n * @typedef {string} TaskInstanceStateLabel\n */\n//# sourceMappingURL=index.js.map",
    "static": true,
    "longname": "/home/topaxi/rxtask/dist/esm/reducers/task-instance/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 101,
    "kind": "variable",
    "name": "RUNNING_STATE",
    "memberof": "esm/reducers/task-instance/index.js",
    "static": true,
    "longname": "esm/reducers/task-instance/index.js~RUNNING_STATE",
    "access": "public",
    "export": true,
    "importPath": "rxtask/reducers/task-instance",
    "importStyle": "{RUNNING_STATE}",
    "description": "",
    "lineNumber": 5,
    "type": {
      "nullable": null,
      "types": [
        "TaskInstanceState<any>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 102,
    "kind": "variable",
    "name": "PENDING_STATE",
    "memberof": "esm/reducers/task-instance/index.js",
    "static": true,
    "longname": "esm/reducers/task-instance/index.js~PENDING_STATE",
    "access": "public",
    "export": true,
    "importPath": "rxtask/reducers/task-instance",
    "importStyle": "{PENDING_STATE}",
    "description": "",
    "lineNumber": 14,
    "type": {
      "nullable": null,
      "types": [
        "TaskInstanceState<any>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 103,
    "kind": "variable",
    "name": "CANCELLED_STATE",
    "memberof": "esm/reducers/task-instance/index.js",
    "static": true,
    "longname": "esm/reducers/task-instance/index.js~CANCELLED_STATE",
    "access": "public",
    "export": true,
    "importPath": "rxtask/reducers/task-instance",
    "importStyle": "{CANCELLED_STATE}",
    "description": "",
    "lineNumber": 23,
    "type": {
      "nullable": null,
      "types": [
        "TaskInstanceState<any>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 104,
    "kind": "function",
    "name": "notificationReducer",
    "memberof": "esm/reducers/task-instance/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/reducers/task-instance/index.js~notificationReducer",
    "access": "public",
    "export": false,
    "importPath": "rxtask/reducers/task-instance",
    "importStyle": null,
    "description": null,
    "lineNumber": 29,
    "undocument": true,
    "params": [
      {
        "name": "s",
        "types": [
          "*"
        ]
      },
      {
        "name": "n",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 105,
    "kind": "function",
    "name": "reducer",
    "memberof": "esm/reducers/task-instance/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/reducers/task-instance/index.js~reducer",
    "access": "public",
    "export": true,
    "importPath": "rxtask/reducers/task-instance",
    "importStyle": "{reducer}",
    "description": "",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "TaskInstanceState<T>"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "PENDING_STATE",
        "defaultRaw": "PENDING_STATE",
        "name": "state",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "TaskInstanceActions<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TaskInstanceState<T>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 106,
    "kind": "function",
    "name": "isPending",
    "memberof": "esm/reducers/task-instance/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/reducers/task-instance/index.js~isPending",
    "access": "public",
    "export": true,
    "importPath": "rxtask/reducers/task-instance",
    "importStyle": "{isPending}",
    "description": "",
    "lineNumber": 59,
    "params": [
      {
        "nullable": null,
        "types": [
          "TaskInstanceStateLabel"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 107,
    "kind": "function",
    "name": "isRunning",
    "memberof": "esm/reducers/task-instance/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/reducers/task-instance/index.js~isRunning",
    "access": "public",
    "export": true,
    "importPath": "rxtask/reducers/task-instance",
    "importStyle": "{isRunning}",
    "description": "",
    "lineNumber": 64,
    "params": [
      {
        "nullable": null,
        "types": [
          "TaskInstanceStateLabel"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 108,
    "kind": "function",
    "name": "isError",
    "memberof": "esm/reducers/task-instance/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/reducers/task-instance/index.js~isError",
    "access": "public",
    "export": true,
    "importPath": "rxtask/reducers/task-instance",
    "importStyle": "{isError}",
    "description": "",
    "lineNumber": 69,
    "params": [
      {
        "nullable": null,
        "types": [
          "TaskInstanceStateLabel"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 109,
    "kind": "function",
    "name": "isCancelled",
    "memberof": "esm/reducers/task-instance/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/reducers/task-instance/index.js~isCancelled",
    "access": "public",
    "export": true,
    "importPath": "rxtask/reducers/task-instance",
    "importStyle": "{isCancelled}",
    "description": "",
    "lineNumber": 74,
    "params": [
      {
        "nullable": null,
        "types": [
          "TaskInstanceStateLabel"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 110,
    "kind": "function",
    "name": "isComplete",
    "memberof": "esm/reducers/task-instance/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/reducers/task-instance/index.js~isComplete",
    "access": "public",
    "export": true,
    "importPath": "rxtask/reducers/task-instance",
    "importStyle": "{isComplete}",
    "description": "",
    "lineNumber": 79,
    "params": [
      {
        "nullable": null,
        "types": [
          "TaskInstanceStateLabel"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 111,
    "kind": "function",
    "name": "selectValue",
    "memberof": "esm/reducers/task-instance/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/reducers/task-instance/index.js~selectValue",
    "access": "public",
    "export": true,
    "importPath": "rxtask/reducers/task-instance",
    "importStyle": "{selectValue}",
    "description": "",
    "lineNumber": 84,
    "params": [
      {
        "nullable": null,
        "types": [
          "TaskInstanceState<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "T"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 112,
    "kind": "function",
    "name": "selectHasValue",
    "memberof": "esm/reducers/task-instance/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/reducers/task-instance/index.js~selectHasValue",
    "access": "public",
    "export": true,
    "importPath": "rxtask/reducers/task-instance",
    "importStyle": "{selectHasValue}",
    "description": "",
    "lineNumber": 89,
    "params": [
      {
        "nullable": null,
        "types": [
          "TaskInstanceState<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 113,
    "kind": "function",
    "name": "selectStateLabel",
    "memberof": "esm/reducers/task-instance/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/reducers/task-instance/index.js~selectStateLabel",
    "access": "public",
    "export": true,
    "importPath": "rxtask/reducers/task-instance",
    "importStyle": "{selectStateLabel}",
    "description": "",
    "lineNumber": 94,
    "params": [
      {
        "nullable": null,
        "types": [
          "TaskInstanceState<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TaskInstanceStateLabel"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 114,
    "kind": "function",
    "name": "selectError",
    "memberof": "esm/reducers/task-instance/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/reducers/task-instance/index.js~selectError",
    "access": "public",
    "export": true,
    "importPath": "rxtask/reducers/task-instance",
    "importStyle": "{selectError}",
    "description": "",
    "lineNumber": 99,
    "params": [
      {
        "nullable": null,
        "types": [
          "TaskInstanceState<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": ""
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "Error"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 115,
    "kind": "function",
    "name": "hasValue",
    "memberof": "esm/reducers/task-instance/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/reducers/task-instance/index.js~hasValue",
    "access": "public",
    "export": true,
    "importPath": "rxtask/reducers/task-instance",
    "importStyle": "{hasValue}",
    "description": "",
    "lineNumber": 104,
    "params": [
      {
        "nullable": null,
        "types": [
          "TaskInstanceState<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 116,
    "kind": "typedef",
    "name": "TaskInstanceState",
    "memberof": "esm/reducers/task-instance/index.js",
    "static": true,
    "longname": "esm/reducers/task-instance/index.js~TaskInstanceState",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "TaskInstanceStateLabel"
        ],
        "spread": false,
        "optional": false,
        "name": "stateLabel",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "hasValue",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "T"
        ],
        "spread": false,
        "optional": false,
        "name": "currentValue",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "Error"
        ],
        "spread": false,
        "optional": false,
        "name": "error",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "TaskInstanceState"
    }
  },
  {
    "__docId__": 117,
    "kind": "typedef",
    "name": "TaskInstanceStateLabel",
    "memberof": "esm/reducers/task-instance/index.js",
    "static": true,
    "longname": "esm/reducers/task-instance/index.js~TaskInstanceStateLabel",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "string"
      ],
      "optional": false,
      "name": "TaskInstanceStateLabel"
    }
  },
  {
    "__docId__": 118,
    "kind": "file",
    "name": "esm/task-instance.js",
    "content": "import { Subject } from 'rxjs/Subject';\nimport { Subscription } from 'rxjs/Subscription';\nimport { observable } from 'rxjs/symbol/observable';\nimport { map, filter, materialize, multicast, distinctUntilChanged, } from 'rxjs/operators';\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\nimport * as taskInstance from './reducers/task-instance';\nimport { ObjectUnsubscribedError } from 'rxjs/util/ObjectUnsubscribedError';\nimport { actionReducer } from './operators';\nimport { createNotificationAction, } from './actions/task-instance';\nlet taskInstanceId = 0;\n/**\n * @class TaskInstance<T>\n * @implements {Subscribable<T>}\n * @implements {ISubscription}\n */\nexport class TaskInstance {\n    /**\n     * @param {Observable<T>} observable$\n     * @return {TaskInstance<T>}\n     */\n    constructor(observable$) {\n        this._id = ++taskInstanceId;\n        this._closed = false;\n        this._observableMirror$ = new Subject();\n        this._currentState$ = new ReplaySubject(1);\n        this._subscription = new Subscription();\n        this._observableNotifications$ = this._observableMirror$.pipe(materialize());\n        this._actions$ = this._observableNotifications$.pipe(map(createNotificationAction));\n        /** @type {Observable<TaskInstanceState<T>>} */\n        this.state$ = this._actions$.pipe(actionReducer(taskInstance.reducer), multicast(this._currentState$)).refCount();\n        /** @type {Observable<TaskInstanceStateLabel<T>>} */\n        this.stateLabel$ = this.state$.pipe(map(taskInstance.selectStateLabel), distinctUntilChanged());\n        /** @type {Observable<boolean>} */\n        this.isPending$ = this.stateLabel$.pipe(map(taskInstance.isPending));\n        /** @type {Observable<boolean>} */\n        this.isRunning$ = this.stateLabel$.pipe(map(taskInstance.isRunning));\n        /** @type {Observable<boolean>} */\n        this.isCancelled$ = this.stateLabel$.pipe(map(taskInstance.isCancelled));\n        /** @type {Observable<boolean>} */\n        this.isError$ = this.stateLabel$.pipe(map(taskInstance.isError));\n        /** @type {Observable<boolean>} */\n        this.isComplete$ = this.stateLabel$.pipe(map(taskInstance.isComplete));\n        /** @type {Observable<boolean>} */\n        this.hasValue$ = this.state$.pipe(map(taskInstance.hasValue));\n        /** @type {Observable<T>} */\n        this.currentValue$ = this.state$.pipe(filter(taskInstance.hasValue), map(taskInstance.selectValue));\n        /** @type {Observable<Error|null>} */\n        this.error$ = this.state$.pipe(map(taskInstance.selectError));\n        this._observable$ = observable$.pipe(multicast(this._observableMirror$)).refCount();\n    }\n    /** @type {number} */\n    get id() {\n        return this._id;\n    }\n    /** @type {boolean} */\n    get closed() {\n        return this._closed;\n    }\n    /** @ignore */\n    [observable]() {\n        return this;\n    }\n    /**\n     * @param {Observer|Function} [observerOrNext] Either an observer with methods to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n     *  Observable.\n     * @param {Function} [error] A handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled.\n     * @param {Function} [complete] A handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     */\n    subscribe(observerOrNext, error, complete) {\n        if (this._closed)\n            throw new ObjectUnsubscribedError();\n        this._currentState$.next(taskInstance.RUNNING_STATE);\n        this._subscription.add(this._observable$.subscribe(observerOrNext, error, complete));\n        return this;\n    }\n    /**\n     * @return {void}\n     */\n    unsubscribe() {\n        this._currentState$.next(taskInstance.CANCELLED_STATE);\n        this._closed = true;\n        this._subscription.unsubscribe();\n    }\n    /** @ignore */\n    toString() {\n        return `TaskInstance#${this._id}`;\n    }\n    /** @ignore */\n    toJSON() {\n        return { type: 'TaskInstance', id: this._id };\n    }\n}\n//# sourceMappingURL=task-instance.js.map",
    "static": true,
    "longname": "/home/topaxi/rxtask/dist/esm/task-instance.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 119,
    "kind": "variable",
    "name": "taskInstanceId",
    "memberof": "esm/task-instance.js",
    "static": true,
    "longname": "esm/task-instance.js~taskInstanceId",
    "access": "public",
    "export": false,
    "importPath": "rxtask/task-instance.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 120,
    "kind": "class",
    "name": "TaskInstance",
    "memberof": "esm/task-instance.js",
    "static": true,
    "longname": "esm/task-instance.js~TaskInstance",
    "access": "public",
    "export": true,
    "importPath": "rxtask/task-instance.js",
    "importStyle": "{TaskInstance}",
    "description": "",
    "lineNumber": 16,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "TaskInstance<T>"
      }
    ],
    "interface": false,
    "implements": [
      "Subscribable<T>",
      "ISubscription"
    ]
  },
  {
    "__docId__": 121,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "esm/task-instance.js~TaskInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "esm/task-instance.js~TaskInstance#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "Observable<T>"
        ],
        "spread": false,
        "optional": false,
        "name": "observable$",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TaskInstance<T>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 122,
    "kind": "member",
    "name": "_id",
    "memberof": "esm/task-instance.js~TaskInstance",
    "static": false,
    "longname": "esm/task-instance.js~TaskInstance#_id",
    "access": "private",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 123,
    "kind": "member",
    "name": "_closed",
    "memberof": "esm/task-instance.js~TaskInstance",
    "static": false,
    "longname": "esm/task-instance.js~TaskInstance#_closed",
    "access": "private",
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 124,
    "kind": "member",
    "name": "_observableMirror$",
    "memberof": "esm/task-instance.js~TaskInstance",
    "static": false,
    "longname": "esm/task-instance.js~TaskInstance#_observableMirror$",
    "access": "private",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 125,
    "kind": "member",
    "name": "_currentState$",
    "memberof": "esm/task-instance.js~TaskInstance",
    "static": false,
    "longname": "esm/task-instance.js~TaskInstance#_currentState$",
    "access": "private",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 126,
    "kind": "member",
    "name": "_subscription",
    "memberof": "esm/task-instance.js~TaskInstance",
    "static": false,
    "longname": "esm/task-instance.js~TaskInstance#_subscription",
    "access": "private",
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 127,
    "kind": "member",
    "name": "_observableNotifications$",
    "memberof": "esm/task-instance.js~TaskInstance",
    "static": false,
    "longname": "esm/task-instance.js~TaskInstance#_observableNotifications$",
    "access": "private",
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 128,
    "kind": "member",
    "name": "_actions$",
    "memberof": "esm/task-instance.js~TaskInstance",
    "static": false,
    "longname": "esm/task-instance.js~TaskInstance#_actions$",
    "access": "private",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 129,
    "kind": "member",
    "name": "state$",
    "memberof": "esm/task-instance.js~TaskInstance",
    "static": false,
    "longname": "esm/task-instance.js~TaskInstance#state$",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "type": {
      "nullable": null,
      "types": [
        "Observable<TaskInstanceState<T>>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 130,
    "kind": "member",
    "name": "stateLabel$",
    "memberof": "esm/task-instance.js~TaskInstance",
    "static": false,
    "longname": "esm/task-instance.js~TaskInstance#stateLabel$",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "type": {
      "nullable": null,
      "types": [
        "Observable<TaskInstanceStateLabel<T>>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 131,
    "kind": "member",
    "name": "isPending$",
    "memberof": "esm/task-instance.js~TaskInstance",
    "static": false,
    "longname": "esm/task-instance.js~TaskInstance#isPending$",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "type": {
      "nullable": null,
      "types": [
        "Observable<boolean>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 132,
    "kind": "member",
    "name": "isRunning$",
    "memberof": "esm/task-instance.js~TaskInstance",
    "static": false,
    "longname": "esm/task-instance.js~TaskInstance#isRunning$",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "type": {
      "nullable": null,
      "types": [
        "Observable<boolean>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 133,
    "kind": "member",
    "name": "isCancelled$",
    "memberof": "esm/task-instance.js~TaskInstance",
    "static": false,
    "longname": "esm/task-instance.js~TaskInstance#isCancelled$",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "type": {
      "nullable": null,
      "types": [
        "Observable<boolean>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 134,
    "kind": "member",
    "name": "isError$",
    "memberof": "esm/task-instance.js~TaskInstance",
    "static": false,
    "longname": "esm/task-instance.js~TaskInstance#isError$",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "type": {
      "nullable": null,
      "types": [
        "Observable<boolean>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 135,
    "kind": "member",
    "name": "isComplete$",
    "memberof": "esm/task-instance.js~TaskInstance",
    "static": false,
    "longname": "esm/task-instance.js~TaskInstance#isComplete$",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "Observable<boolean>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 136,
    "kind": "member",
    "name": "hasValue$",
    "memberof": "esm/task-instance.js~TaskInstance",
    "static": false,
    "longname": "esm/task-instance.js~TaskInstance#hasValue$",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "type": {
      "nullable": null,
      "types": [
        "Observable<boolean>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 137,
    "kind": "member",
    "name": "currentValue$",
    "memberof": "esm/task-instance.js~TaskInstance",
    "static": false,
    "longname": "esm/task-instance.js~TaskInstance#currentValue$",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "Observable<T>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 138,
    "kind": "member",
    "name": "error$",
    "memberof": "esm/task-instance.js~TaskInstance",
    "static": false,
    "longname": "esm/task-instance.js~TaskInstance#error$",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "Observable<Error|null>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 139,
    "kind": "member",
    "name": "_observable$",
    "memberof": "esm/task-instance.js~TaskInstance",
    "static": false,
    "longname": "esm/task-instance.js~TaskInstance#_observable$",
    "access": "private",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 140,
    "kind": "get",
    "name": "id",
    "memberof": "esm/task-instance.js~TaskInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "esm/task-instance.js~TaskInstance#id",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 141,
    "kind": "get",
    "name": "closed",
    "memberof": "esm/task-instance.js~TaskInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "esm/task-instance.js~TaskInstance#closed",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 142,
    "kind": "method",
    "name": "[observable]",
    "memberof": "esm/task-instance.js~TaskInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "esm/task-instance.js~TaskInstance#[observable]",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 143,
    "kind": "method",
    "name": "subscribe",
    "memberof": "esm/task-instance.js~TaskInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "esm/task-instance.js~TaskInstance#subscribe",
    "access": "public",
    "description": "",
    "lineNumber": 72,
    "params": [
      {
        "nullable": null,
        "types": [
          "Observer",
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "observerOrNext",
        "description": "Either an observer with methods to be called,\n or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n Observable."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "error",
        "description": "A handler for a terminal event resulting from an error. If no error handler is provided,\n the error will be thrown as unhandled."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "complete",
        "description": "A handler for a terminal event resulting from successful completion."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ISubscription"
      ],
      "spread": false,
      "description": "a subscription reference to the registered handlers"
    }
  },
  {
    "__docId__": 144,
    "kind": "method",
    "name": "unsubscribe",
    "memberof": "esm/task-instance.js~TaskInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "esm/task-instance.js~TaskInstance#unsubscribe",
    "access": "public",
    "description": "",
    "lineNumber": 82,
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 146,
    "kind": "method",
    "name": "toString",
    "memberof": "esm/task-instance.js~TaskInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "esm/task-instance.js~TaskInstance#toString",
    "access": "public",
    "description": null,
    "lineNumber": 88,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 147,
    "kind": "method",
    "name": "toJSON",
    "memberof": "esm/task-instance.js~TaskInstance",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "esm/task-instance.js~TaskInstance#toJSON",
    "access": "public",
    "description": null,
    "lineNumber": 92,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "{\"type\": string, \"id\": *}"
      ]
    }
  },
  {
    "__docId__": 148,
    "kind": "file",
    "name": "esm/task.js",
    "content": "import { Subscription } from 'rxjs/Subscription';\nimport { defer } from 'rxjs/observable/defer';\nimport { Subject } from 'rxjs/Subject';\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\nimport { asap } from 'rxjs/scheduler/asap';\nimport { map, mergeMap, exhaust, mergeAll, switchAll, takeUntil, share, shareReplay, auditTime, } from 'rxjs/operators';\nimport { TaskInstance } from './task-instance';\nimport { createCallableObject, assertNever } from './utils';\nimport * as taskReducer from './reducers/task';\nimport { selectPerformed, selectPending, selectRunning, selectSuccessful, selectCancelled, selectErrored, selectCompleted, selectLast, selectLastRunning, selectLastSuccessful, selectLastCancelled, selectLastErrored, selectLastCompleted, } from './reducers/task';\nimport { ObjectUnsubscribedError } from 'rxjs/util/ObjectUnsubscribedError';\nimport { actionReducer, mapNonNull } from './operators';\nimport * as taskActions from './actions/task';\nimport { toAction } from './actions';\n/**\n * @param {TaskCallback<T, U>} task\n * @return {Task<U>}\n */\nexport const task = (task) => new Task(task);\nconst selectStateLabel$ = (t) => t.stateLabel$;\nlet taskId = 0;\n/**\n * @class Task<T, U>\n * @implements {Subscribable<T>}\n * @implements {ISubscription}\n */\nexport class Task {\n    /**\n     * @param {TaskCallback<U, T>} task\n     * @return {Task<T, U>}\n     */\n    constructor(task) {\n        this._id = ++taskId;\n        this._flattenType = \"merge\" /* MERGE */;\n        this._concurrency = Infinity;\n        this._autoSubscribe = false;\n        this._closed = false;\n        this._subscription = new Subscription();\n        this._perform$ = new Subject();\n        this._takeUntilObservable$ = new ReplaySubject(1);\n        this._takeUntil$ = this._takeUntilObservable$.pipe(switchAll());\n        this._task$ = defer(() => this._perform$.pipe(this._flatten(), takeUntil(this._takeUntil$))).pipe(share());\n        /** @type {Observable<TaskState<T>>} */\n        this.state$ = this._perform$.pipe(mergeMap(selectStateLabel$, taskReducer.combineTaskInstanceWithStateLabel), map(toAction(taskActions.TASK_INSTANCE_STATE_UPDATE_ACTION)), actionReducer(taskReducer.reducer), auditTime(0, asap), takeUntil(this._takeUntil$), shareReplay(1));\n        /** @type {Observable<number>} */\n        this.performed$ = this.state$.pipe(map(selectPerformed));\n        /** @type {Observable<Array<TaskInstance<T>>>} */\n        this.pending$ = this.state$.pipe(map(selectPending));\n        /** @type {Observable<Array<TaskInstance<T>>>} */\n        this.running$ = this.state$.pipe(map(selectRunning));\n        /** @type {Observable<number>} */\n        this.cancelled$ = this.state$.pipe(map(selectCancelled));\n        /** @type {Observable<number>} */\n        this.successful$ = this.state$.pipe(map(selectSuccessful));\n        /** @type {Observable<number>} */\n        this.errored$ = this.state$.pipe(map(selectErrored));\n        /** @type {Observable<number>} */\n        this.completed$ = this.state$.pipe(map(selectCompleted));\n        /** @type {Observable<TaskInstance<T>>} */\n        this.last$ = this.state$.pipe(mapNonNull(selectLast));\n        /** @type {Observable<TaskInstance<T>>} */\n        this.lastRunning$ = this.state$.pipe(mapNonNull(selectLastRunning));\n        /** @type {Observable<TaskInstance<T>>} */\n        this.lastSuccessful$ = this.state$.pipe(mapNonNull(selectLastSuccessful));\n        /** @type {Observable<TaskInstance<T>>} */\n        this.lastCancelled$ = this.state$.pipe(mapNonNull(selectLastCancelled));\n        /** @type {Observable<TaskInstance<T>>} */\n        this.lastErrored$ = this.state$.pipe(mapNonNull(selectLastErrored));\n        /** @type {Observable<TaskInstance<T>>} */\n        this.lastCompleted$ = this.state$.pipe(mapNonNull(selectLastCompleted));\n        this._task = task;\n    }\n    /** @type {number} */\n    get id() {\n        return this._id;\n    }\n    /** @type {boolean} */\n    get closed() {\n        return this._closed;\n    }\n    /**\n     * @param {U} value\n     * @return {TaskInstance<T>}\n     */\n    perform(value) {\n        if (this._closed)\n            throw new ObjectUnsubscribedError();\n        if (this._autoSubscribe === true) {\n            this.subscribe();\n        }\n        const task = this._createTaskInstance(this._task, value);\n        return this._perform$.next(task), task;\n    }\n    /**\n     * @param {Observable<any>} until$\n     * @return {Task<T>}\n     */\n    takeUntil(until$) {\n        this._takeUntilObservable$.next(until$);\n        return this;\n    }\n    /**\n     * @param {Observable<any>} until$\n     * @return {Task<T>}\n     */\n    subscribeUntil(until$) {\n        this._autoSubscribe = true;\n        return this.takeUntil(until$);\n    }\n    /**\n     * @param {Observer|Function} [observerOrNext] Either an observer with methods to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n     *  Observable.\n     * @param {Function} [error] A handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled.\n     * @param {Function} [complete] A handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     */\n    subscribe(observerOrNext, error, complete) {\n        if (this._closed)\n            throw new ObjectUnsubscribedError();\n        this._autoSubscribe = false;\n        return this._subscription.add(this._task$.subscribe(observerOrNext, error, complete));\n    }\n    /**\n     * @return {void}\n     */\n    unsubscribe() {\n        this._closed = true;\n        this._subscription.unsubscribe();\n    }\n    /**\n     * @param {number} concurrency\n     * @return {Task<T>}\n     */\n    concurrency(concurrency) {\n        this._flattenType = \"merge\" /* MERGE */;\n        this._concurrency = concurrency;\n        return this;\n    }\n    /**\n     * @return {Task<T>}\n     */\n    switch() {\n        this._flattenType = \"switch\" /* SWITCH */;\n        return this;\n    }\n    /**\n     * @return {Task<T>}\n     */\n    concat() {\n        return this.concurrency(1);\n    }\n    /**\n     * @return {Task<T>}\n     */\n    drop() {\n        this._flattenType = \"exhaust\" /* EXHAUST */;\n        return this;\n    }\n    /**\n     * @return {Callable<Task<T>>}\n     */\n    callable() {\n        return createCallableObject(this, this.perform);\n    }\n    /** @ignore */\n    toString() {\n        return `Task#${this._id}`;\n    }\n    /** @ignore */\n    toJSON() {\n        return { type: 'Task', id: this._id };\n    }\n    _flatten() {\n        switch (this._flattenType) {\n            case \"switch\" /* SWITCH */:\n                return switchAll();\n            case \"exhaust\" /* EXHAUST */:\n                return exhaust();\n            case \"merge\" /* MERGE */:\n                return mergeAll(this._concurrency);\n            // istanbul ignore next\n            default:\n                return assertNever(this._flattenType);\n        }\n    }\n    _createTaskInstance(t, v) {\n        return new TaskInstance(defer(() => t(v)));\n    }\n}\n//# sourceMappingURL=task.js.map",
    "static": true,
    "longname": "/home/topaxi/rxtask/dist/esm/task.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 149,
    "kind": "function",
    "name": "task",
    "memberof": "esm/task.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/task.js~task",
    "access": "public",
    "export": true,
    "importPath": "rxtask/task.js",
    "importStyle": "{task}",
    "description": "",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "TaskCallback<T, U>"
        ],
        "spread": false,
        "optional": false,
        "name": "task",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Task<U>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 150,
    "kind": "function",
    "name": "selectStateLabel$",
    "memberof": "esm/task.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/task.js~selectStateLabel$",
    "access": "public",
    "export": false,
    "importPath": "rxtask/task.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      }
    ],
    "return": null,
    "ignore": true
  },
  {
    "__docId__": 151,
    "kind": "variable",
    "name": "taskId",
    "memberof": "esm/task.js",
    "static": true,
    "longname": "esm/task.js~taskId",
    "access": "public",
    "export": false,
    "importPath": "rxtask/task.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 152,
    "kind": "class",
    "name": "Task",
    "memberof": "esm/task.js",
    "static": true,
    "longname": "esm/task.js~Task",
    "access": "public",
    "export": true,
    "importPath": "rxtask/task.js",
    "importStyle": "{Task}",
    "description": "",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": "Task<T, U>"
      }
    ],
    "interface": false,
    "implements": [
      "Subscribable<T>",
      "ISubscription"
    ]
  },
  {
    "__docId__": 153,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "esm/task.js~Task",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "esm/task.js~Task#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "TaskCallback<U, T>"
        ],
        "spread": false,
        "optional": false,
        "name": "task",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Task<T, U>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 154,
    "kind": "member",
    "name": "_id",
    "memberof": "esm/task.js~Task",
    "static": false,
    "longname": "esm/task.js~Task#_id",
    "access": "private",
    "description": null,
    "lineNumber": 33,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 155,
    "kind": "member",
    "name": "_flattenType",
    "memberof": "esm/task.js~Task",
    "static": false,
    "longname": "esm/task.js~Task#_flattenType",
    "access": "private",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 156,
    "kind": "member",
    "name": "_concurrency",
    "memberof": "esm/task.js~Task",
    "static": false,
    "longname": "esm/task.js~Task#_concurrency",
    "access": "private",
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 157,
    "kind": "member",
    "name": "_autoSubscribe",
    "memberof": "esm/task.js~Task",
    "static": false,
    "longname": "esm/task.js~Task#_autoSubscribe",
    "access": "private",
    "description": null,
    "lineNumber": 36,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 158,
    "kind": "member",
    "name": "_closed",
    "memberof": "esm/task.js~Task",
    "static": false,
    "longname": "esm/task.js~Task#_closed",
    "access": "private",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 159,
    "kind": "member",
    "name": "_subscription",
    "memberof": "esm/task.js~Task",
    "static": false,
    "longname": "esm/task.js~Task#_subscription",
    "access": "private",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 160,
    "kind": "member",
    "name": "_perform$",
    "memberof": "esm/task.js~Task",
    "static": false,
    "longname": "esm/task.js~Task#_perform$",
    "access": "private",
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 161,
    "kind": "member",
    "name": "_takeUntilObservable$",
    "memberof": "esm/task.js~Task",
    "static": false,
    "longname": "esm/task.js~Task#_takeUntilObservable$",
    "access": "private",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 162,
    "kind": "member",
    "name": "_takeUntil$",
    "memberof": "esm/task.js~Task",
    "static": false,
    "longname": "esm/task.js~Task#_takeUntil$",
    "access": "private",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 163,
    "kind": "member",
    "name": "_task$",
    "memberof": "esm/task.js~Task",
    "static": false,
    "longname": "esm/task.js~Task#_task$",
    "access": "private",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 164,
    "kind": "member",
    "name": "state$",
    "memberof": "esm/task.js~Task",
    "static": false,
    "longname": "esm/task.js~Task#state$",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "type": {
      "nullable": null,
      "types": [
        "Observable<TaskState<T>>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 165,
    "kind": "member",
    "name": "performed$",
    "memberof": "esm/task.js~Task",
    "static": false,
    "longname": "esm/task.js~Task#performed$",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "Observable<number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 166,
    "kind": "member",
    "name": "pending$",
    "memberof": "esm/task.js~Task",
    "static": false,
    "longname": "esm/task.js~Task#pending$",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "Observable<Array<TaskInstance<T>>>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 167,
    "kind": "member",
    "name": "running$",
    "memberof": "esm/task.js~Task",
    "static": false,
    "longname": "esm/task.js~Task#running$",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "type": {
      "nullable": null,
      "types": [
        "Observable<Array<TaskInstance<T>>>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 168,
    "kind": "member",
    "name": "cancelled$",
    "memberof": "esm/task.js~Task",
    "static": false,
    "longname": "esm/task.js~Task#cancelled$",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "type": {
      "nullable": null,
      "types": [
        "Observable<number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 169,
    "kind": "member",
    "name": "successful$",
    "memberof": "esm/task.js~Task",
    "static": false,
    "longname": "esm/task.js~Task#successful$",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "type": {
      "nullable": null,
      "types": [
        "Observable<number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 170,
    "kind": "member",
    "name": "errored$",
    "memberof": "esm/task.js~Task",
    "static": false,
    "longname": "esm/task.js~Task#errored$",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "type": {
      "nullable": null,
      "types": [
        "Observable<number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 171,
    "kind": "member",
    "name": "completed$",
    "memberof": "esm/task.js~Task",
    "static": false,
    "longname": "esm/task.js~Task#completed$",
    "access": "public",
    "description": null,
    "lineNumber": 58,
    "type": {
      "nullable": null,
      "types": [
        "Observable<number>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 172,
    "kind": "member",
    "name": "last$",
    "memberof": "esm/task.js~Task",
    "static": false,
    "longname": "esm/task.js~Task#last$",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "type": {
      "nullable": null,
      "types": [
        "Observable<TaskInstance<T>>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 173,
    "kind": "member",
    "name": "lastRunning$",
    "memberof": "esm/task.js~Task",
    "static": false,
    "longname": "esm/task.js~Task#lastRunning$",
    "access": "public",
    "description": null,
    "lineNumber": 62,
    "type": {
      "nullable": null,
      "types": [
        "Observable<TaskInstance<T>>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 174,
    "kind": "member",
    "name": "lastSuccessful$",
    "memberof": "esm/task.js~Task",
    "static": false,
    "longname": "esm/task.js~Task#lastSuccessful$",
    "access": "public",
    "description": null,
    "lineNumber": 64,
    "type": {
      "nullable": null,
      "types": [
        "Observable<TaskInstance<T>>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 175,
    "kind": "member",
    "name": "lastCancelled$",
    "memberof": "esm/task.js~Task",
    "static": false,
    "longname": "esm/task.js~Task#lastCancelled$",
    "access": "public",
    "description": null,
    "lineNumber": 66,
    "type": {
      "nullable": null,
      "types": [
        "Observable<TaskInstance<T>>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 176,
    "kind": "member",
    "name": "lastErrored$",
    "memberof": "esm/task.js~Task",
    "static": false,
    "longname": "esm/task.js~Task#lastErrored$",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "type": {
      "nullable": null,
      "types": [
        "Observable<TaskInstance<T>>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 177,
    "kind": "member",
    "name": "lastCompleted$",
    "memberof": "esm/task.js~Task",
    "static": false,
    "longname": "esm/task.js~Task#lastCompleted$",
    "access": "public",
    "description": null,
    "lineNumber": 70,
    "type": {
      "nullable": null,
      "types": [
        "Observable<TaskInstance<T>>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 178,
    "kind": "member",
    "name": "_task",
    "memberof": "esm/task.js~Task",
    "static": false,
    "longname": "esm/task.js~Task#_task",
    "access": "private",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 179,
    "kind": "get",
    "name": "id",
    "memberof": "esm/task.js~Task",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "esm/task.js~Task#id",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 180,
    "kind": "get",
    "name": "closed",
    "memberof": "esm/task.js~Task",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "esm/task.js~Task#closed",
    "access": "public",
    "description": null,
    "lineNumber": 78,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 181,
    "kind": "method",
    "name": "perform",
    "memberof": "esm/task.js~Task",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "esm/task.js~Task#perform",
    "access": "public",
    "description": "",
    "lineNumber": 85,
    "params": [
      {
        "nullable": null,
        "types": [
          "U"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TaskInstance<T>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 182,
    "kind": "method",
    "name": "takeUntil",
    "memberof": "esm/task.js~Task",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "esm/task.js~Task#takeUntil",
    "access": "public",
    "description": "",
    "lineNumber": 98,
    "params": [
      {
        "nullable": null,
        "types": [
          "Observable<any>"
        ],
        "spread": false,
        "optional": false,
        "name": "until$",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Task<T>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 183,
    "kind": "method",
    "name": "subscribeUntil",
    "memberof": "esm/task.js~Task",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "esm/task.js~Task#subscribeUntil",
    "access": "public",
    "description": "",
    "lineNumber": 106,
    "params": [
      {
        "nullable": null,
        "types": [
          "Observable<any>"
        ],
        "spread": false,
        "optional": false,
        "name": "until$",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Task<T>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 185,
    "kind": "method",
    "name": "subscribe",
    "memberof": "esm/task.js~Task",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "esm/task.js~Task#subscribe",
    "access": "public",
    "description": "",
    "lineNumber": 119,
    "params": [
      {
        "nullable": null,
        "types": [
          "Observer",
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "observerOrNext",
        "description": "Either an observer with methods to be called,\n or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n Observable."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "error",
        "description": "A handler for a terminal event resulting from an error. If no error handler is provided,\n the error will be thrown as unhandled."
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": true,
        "name": "complete",
        "description": "A handler for a terminal event resulting from successful completion."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ISubscription"
      ],
      "spread": false,
      "description": "a subscription reference to the registered handlers"
    }
  },
  {
    "__docId__": 187,
    "kind": "method",
    "name": "unsubscribe",
    "memberof": "esm/task.js~Task",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "esm/task.js~Task#unsubscribe",
    "access": "public",
    "description": "",
    "lineNumber": 128,
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 189,
    "kind": "method",
    "name": "concurrency",
    "memberof": "esm/task.js~Task",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "esm/task.js~Task#concurrency",
    "access": "public",
    "description": "",
    "lineNumber": 136,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "concurrency",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Task<T>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 192,
    "kind": "method",
    "name": "switch",
    "memberof": "esm/task.js~Task",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "esm/task.js~Task#switch",
    "access": "public",
    "description": "",
    "lineNumber": 144,
    "return": {
      "nullable": null,
      "types": [
        "Task<T>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 194,
    "kind": "method",
    "name": "concat",
    "memberof": "esm/task.js~Task",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "esm/task.js~Task#concat",
    "access": "public",
    "description": "",
    "lineNumber": 151,
    "return": {
      "nullable": null,
      "types": [
        "Task<T>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 195,
    "kind": "method",
    "name": "drop",
    "memberof": "esm/task.js~Task",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "esm/task.js~Task#drop",
    "access": "public",
    "description": "",
    "lineNumber": 157,
    "return": {
      "nullable": null,
      "types": [
        "Task<T>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 197,
    "kind": "method",
    "name": "callable",
    "memberof": "esm/task.js~Task",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "esm/task.js~Task#callable",
    "access": "public",
    "description": "",
    "lineNumber": 164,
    "return": {
      "nullable": null,
      "types": [
        "Callable<Task<T>>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 198,
    "kind": "method",
    "name": "toString",
    "memberof": "esm/task.js~Task",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "esm/task.js~Task#toString",
    "access": "public",
    "description": null,
    "lineNumber": 168,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 199,
    "kind": "method",
    "name": "toJSON",
    "memberof": "esm/task.js~Task",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "esm/task.js~Task#toJSON",
    "access": "public",
    "description": null,
    "lineNumber": 172,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "{\"type\": string, \"id\": *}"
      ]
    }
  },
  {
    "__docId__": 200,
    "kind": "method",
    "name": "_flatten",
    "memberof": "esm/task.js~Task",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "esm/task.js~Task#_flatten",
    "access": "private",
    "description": null,
    "lineNumber": 175,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 201,
    "kind": "method",
    "name": "_createTaskInstance",
    "memberof": "esm/task.js~Task",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "esm/task.js~Task#_createTaskInstance",
    "access": "private",
    "description": null,
    "lineNumber": 188,
    "undocument": true,
    "params": [
      {
        "name": "t",
        "types": [
          "*"
        ]
      },
      {
        "name": "v",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 202,
    "kind": "file",
    "name": "esm/utils/assert-never.js",
    "content": "/**\n * @param {never} x\n * @throws {TypeError}\n * @return {never}\n */\nexport function assertNever(x) {\n    throw new TypeError(`Unkown value ${x}`);\n}\n//# sourceMappingURL=assert-never.js.map",
    "static": true,
    "longname": "/home/topaxi/rxtask/dist/esm/utils/assert-never.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 203,
    "kind": "function",
    "name": "assertNever",
    "memberof": "esm/utils/assert-never.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/utils/assert-never.js~assertNever",
    "access": "public",
    "export": true,
    "importPath": "rxtask/utils/assert-never.js",
    "importStyle": "{assertNever}",
    "description": "",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "never"
        ],
        "spread": false,
        "optional": false,
        "name": "x",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "never"
      ],
      "spread": false,
      "description": ""
    },
    "throws": [
      {
        "types": [
          "TypeError"
        ],
        "description": ""
      }
    ]
  },
  {
    "__docId__": 204,
    "kind": "file",
    "name": "esm/utils/create-callable-object.js",
    "content": "/**\n * @typedef {Function} Callable\n */\n/**\n * @param {Object} obj\n * @param {Function} method\n * @return {Callable<Object>}\n */\nexport function createCallableObject(obj, method) {\n    const methodMap = new WeakMap();\n    const callable = new Proxy(method, {\n        get(target, prop, receiver) {\n            if (prop in obj) {\n                return proxyProperty(obj, prop, receiver);\n            }\n            if (prop in target) {\n                return proxyProperty(target, prop, receiver);\n            }\n            return undefined;\n        },\n        apply(target, thisArg, args) {\n            return target.apply(callable, args);\n        },\n        getPrototypeOf(target) {\n            return Object.getPrototypeOf(obj);\n        },\n    });\n    return callable;\n    function getBoundMethod(obj, fn, receiver) {\n        return (methodMap.has(fn)\n            ? methodMap\n            : methodMap.set(fn, function () {\n                let ret = fn.apply(obj, arguments);\n                return ret === obj ? receiver : ret;\n            })).get(fn);\n    }\n    function proxyProperty(obj, key, receiver) {\n        if (typeof obj[key] === 'function') {\n            return getBoundMethod(obj, obj[key], receiver);\n        }\n        return obj[key];\n    }\n}\n//# sourceMappingURL=create-callable-object.js.map",
    "static": true,
    "longname": "/home/topaxi/rxtask/dist/esm/utils/create-callable-object.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 205,
    "kind": "typedef",
    "name": "Callable",
    "memberof": "esm/utils/create-callable-object.js",
    "static": true,
    "longname": "esm/utils/create-callable-object.js~Callable",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "Function"
      ],
      "optional": false,
      "name": "Callable"
    }
  },
  {
    "__docId__": 206,
    "kind": "function",
    "name": "createCallableObject",
    "memberof": "esm/utils/create-callable-object.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/utils/create-callable-object.js~createCallableObject",
    "access": "public",
    "export": true,
    "importPath": "rxtask/utils/create-callable-object.js",
    "importStyle": "{createCallableObject}",
    "description": "",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "method",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Callable<Object>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 207,
    "kind": "file",
    "name": "esm/utils/empty-array.js",
    "content": "export const EMPTY_ARRAY = Object.freeze([]);\n//# sourceMappingURL=empty-array.js.map",
    "static": true,
    "longname": "/home/topaxi/rxtask/dist/esm/utils/empty-array.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 208,
    "kind": "variable",
    "name": "EMPTY_ARRAY",
    "memberof": "esm/utils/empty-array.js",
    "static": true,
    "longname": "esm/utils/empty-array.js~EMPTY_ARRAY",
    "access": "public",
    "export": true,
    "importPath": "rxtask/utils/empty-array.js",
    "importStyle": "{EMPTY_ARRAY}",
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 209,
    "kind": "file",
    "name": "esm/utils/filter.js",
    "content": "/**\n * @param {any} a\n * @return {function(b: any): boolean}\n */\nexport const neq = (a) => (b) => a !== b;\n/**\n * @param {any|null} value\n * @return {boolean}\n */\nexport const notNull = (value) => value !== null;\n//# sourceMappingURL=filter.js.map",
    "static": true,
    "longname": "/home/topaxi/rxtask/dist/esm/utils/filter.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 210,
    "kind": "function",
    "name": "neq",
    "memberof": "esm/utils/filter.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/utils/filter.js~neq",
    "access": "public",
    "export": true,
    "importPath": "rxtask/utils/filter.js",
    "importStyle": "{neq}",
    "description": "",
    "lineNumber": 5,
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function(b: any): boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 211,
    "kind": "function",
    "name": "notNull",
    "memberof": "esm/utils/filter.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/utils/filter.js~notNull",
    "access": "public",
    "export": true,
    "importPath": "rxtask/utils/filter.js",
    "importStyle": "{notNull}",
    "description": "",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "any",
          "null"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 212,
    "kind": "file",
    "name": "esm/utils/index.js",
    "content": "export * from './empty-array';\nexport * from './assert-never';\nexport * from './filter';\nexport * from './create-callable-object';\nexport * from './pipe';\n//# sourceMappingURL=index.js.map",
    "static": true,
    "longname": "/home/topaxi/rxtask/dist/esm/utils/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 213,
    "kind": "file",
    "name": "esm/utils/pipe.js",
    "content": "/**\n * @param {any} value\n * @param {...UnaryFunction} args\n * @return {any}\n */\nexport function pipe(value, ...args) {\n    return args.reduce((val, fn) => fn(val), value);\n}\n//# sourceMappingURL=pipe.js.map",
    "static": true,
    "longname": "/home/topaxi/rxtask/dist/esm/utils/pipe.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 214,
    "kind": "function",
    "name": "pipe",
    "memberof": "esm/utils/pipe.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "esm/utils/pipe.js~pipe",
    "access": "public",
    "export": true,
    "importPath": "rxtask/utils/pipe.js",
    "importStyle": "{pipe}",
    "description": "",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "...UnaryFunction"
        ],
        "spread": true,
        "optional": false,
        "name": "args",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "kind": "index",
    "content": "# RxTask\n",
    "longname": "/home/topaxi/rxtask/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"rxtask\",\n  \"version\": \"0.0.1\",\n  \"main\": \"dist/cjs/index.js\",\n  \"types\": \"dist/cjs/typings/index.d.ts\",\n  \"esm\": \"dist/esm/index.js\",\n  \"license\": \"MIT\",\n  \"scripts\": {\n    \"prepublish\": \"npm run build\",\n    \"build\": \"npm run clean && npm run build:all\",\n    \"build:all\": \"npm run build:cjs & npm run build:esm\",\n    \"build:cjs\": \"tsc --declaration --sourceMap -p tsconfig/tsconfig.cjs.json\",\n    \"build:esm\": \"tsc --declaration --sourceMap -p tsconfig/tsconfig.esm.json\",\n    \"build:esm:docs\": \"tsc -p tsconfig/tsconfig.esm.json\",\n    \"build:test\": \"tsc -p tsconfig/tsconfig.test.json\",\n    \"docs\": \"npm run docs:build\",\n    \"docs:build\": \"npm run clean && npm run build:esm:docs && npm run build:test && esdoc\",\n    \"docs:publish\": \"./publish-docs.sh\",\n    \"clean\": \"rimraf dist tmp\",\n    \"test\": \"istanbul cover -e .ts -x '*.test.ts' _mocha -- 'test/**/*.test.ts' --require ts-node/register --require test/setup.ts\"\n  },\n  \"dependencies\": {\n    \"tslib\": \"^1.9.0\"\n  },\n  \"peerDependencies\": {\n    \"rxjs\": \"^5.5.10\"\n  },\n  \"devDependencies\": {\n    \"@types/mocha\": \"^5.0.0\",\n    \"@types/node\": \"^9.6.4\",\n    \"@types/sinon\": \"^4.3.1\",\n    \"@types/sinon-chai\": \"^2.7.29\",\n    \"chai\": \"^4.1.2\",\n    \"esdoc\": \"^1.0.4\",\n    \"esdoc-importpath-plugin\": \"^1.0.1\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"istanbul\": \"^1.1.0-alpha.1\",\n    \"mocha\": \"^5.1.0\",\n    \"rimraf\": \"^2.6.2\",\n    \"rxjs\": \"^5.5.10\",\n    \"rxjs-marbles\": \"^2.4.1\",\n    \"sinon\": \"^4.5.0\",\n    \"sinon-chai\": \"^3.0.0\",\n    \"ts-node\": \"^6.0.0\",\n    \"typescript\": \"^2.8.1\"\n  }\n}\n",
    "longname": "/home/topaxi/rxtask/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "__docId__": 215,
    "kind": "testFile",
    "name": "test/actions/index.test.js",
    "content": "import { createAction, toAction } from '../../src/actions';\nimport * as index from '../../src/actions/index';\nimport { expect } from 'chai';\n/** @ignore */\ndescribe('actions/index', () => {\n    it('exports createAction', () => {\n        expect(index.createAction).to.exist;\n    });\n    it('exports toAction', () => {\n        expect(index.toAction).to.exist;\n    });\n});\n/** @test {createAction} */\ndescribe('actions/createAction', () => {\n    it('creates action', () => {\n        expect(createAction('TEST_ACTION')).to.deep.equal({ type: 'TEST_ACTION' });\n        expect(createAction('TEST_ACTION')).to.not.have.property('payload');\n    });\n    it('creates action with payload', () => {\n        expect(createAction('TEST_ACTION', 'PAYLOAD')).to.deep.equal({\n            type: 'TEST_ACTION',\n            payload: 'PAYLOAD',\n        });\n        expect(createAction('TEST_ACTION', undefined)).to.deep.equal({\n            type: 'TEST_ACTION',\n            payload: undefined,\n        });\n        expect(createAction('TEST_ACTION', undefined)).to.have.property('payload');\n        expect(createAction('TEST_ACTION', [])).to.deep.equal({\n            type: 'TEST_ACTION',\n            payload: [],\n        });\n    });\n});\n/** @test {toAction} */\ndescribe('actions/toAction', () => {\n    it('creates a function to create actions with payload', () => {\n        expect(toAction('TEST_ACTION')('PAYLOAD')).to.deep.equal({\n            type: 'TEST_ACTION',\n            payload: 'PAYLOAD',\n        });\n        expect(toAction('TEST_ACTION')(undefined)).to.deep.equal({\n            type: 'TEST_ACTION',\n            payload: undefined,\n        });\n        expect(toAction('TEST_ACTION')(undefined)).to.have.property('payload');\n    });\n});\n",
    "static": true,
    "longname": "/home/topaxi/rxtask/tmp/test-build/test/actions/index.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 216,
    "kind": "test",
    "name": "describe0",
    "testId": 0,
    "memberof": "test/actions/index.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/actions/index.test.js~describe0",
    "access": null,
    "description": "actions/index",
    "lineNumber": 5,
    "ignore": true
  },
  {
    "__docId__": 217,
    "kind": "test",
    "name": "it1",
    "testId": 1,
    "memberof": "test/actions/index.test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/actions/index.test.js~describe0.it1",
    "access": null,
    "description": "exports createAction",
    "lineNumber": 6
  },
  {
    "__docId__": 218,
    "kind": "test",
    "name": "it2",
    "testId": 2,
    "memberof": "test/actions/index.test.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/actions/index.test.js~describe0.it2",
    "access": null,
    "description": "exports toAction",
    "lineNumber": 9
  },
  {
    "__docId__": 219,
    "kind": "test",
    "name": "describe3",
    "testId": 3,
    "memberof": "test/actions/index.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/actions/index.test.js~describe3",
    "access": null,
    "description": "actions/createAction",
    "lineNumber": 14,
    "testTargets": [
      "createAction"
    ]
  },
  {
    "__docId__": 220,
    "kind": "test",
    "name": "it4",
    "testId": 4,
    "memberof": "test/actions/index.test.js~describe3",
    "testDepth": 1,
    "static": true,
    "longname": "test/actions/index.test.js~describe3.it4",
    "access": null,
    "description": "creates action",
    "lineNumber": 15
  },
  {
    "__docId__": 221,
    "kind": "test",
    "name": "it5",
    "testId": 5,
    "memberof": "test/actions/index.test.js~describe3",
    "testDepth": 1,
    "static": true,
    "longname": "test/actions/index.test.js~describe3.it5",
    "access": null,
    "description": "creates action with payload",
    "lineNumber": 19
  },
  {
    "__docId__": 222,
    "kind": "test",
    "name": "describe6",
    "testId": 6,
    "memberof": "test/actions/index.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/actions/index.test.js~describe6",
    "access": null,
    "description": "actions/toAction",
    "lineNumber": 36,
    "testTargets": [
      "toAction"
    ]
  },
  {
    "__docId__": 223,
    "kind": "test",
    "name": "it7",
    "testId": 7,
    "memberof": "test/actions/index.test.js~describe6",
    "testDepth": 1,
    "static": true,
    "longname": "test/actions/index.test.js~describe6.it7",
    "access": null,
    "description": "creates a function to create actions with payload",
    "lineNumber": 37
  },
  {
    "__docId__": 224,
    "kind": "testFile",
    "name": "test/actions/task-instance.test.js",
    "content": "import { Notification } from 'rxjs/Notification';\nimport * as taskInstanceActions from '../../src/actions/task-instance';\nimport { createNotificationAction } from '../../src/actions/task-instance';\nimport { expect } from 'chai';\ndescribe('actions/task-instance', () => {\n    /** @test {NOTIFICATION_ACTION} */\n    it('exports NOTIFICATION_ACTION', () => {\n        expect(taskInstanceActions.NOTIFICATION_ACTION).to.exist;\n    });\n});\n/** @test {createNotificationAction} */\ndescribe('actions/task-instance/createNotificationAction', () => {\n    it('creates action from Notification', () => {\n        let notification = Notification.createNext('thing');\n        expect(createNotificationAction(notification)).to.deep.equal({\n            type: taskInstanceActions.NOTIFICATION_ACTION,\n            payload: notification,\n        });\n    });\n});\n",
    "static": true,
    "longname": "/home/topaxi/rxtask/tmp/test-build/test/actions/task-instance.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 225,
    "kind": "test",
    "name": "describe8",
    "testId": 8,
    "memberof": "test/actions/task-instance.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/actions/task-instance.test.js~describe8",
    "access": null,
    "description": "actions/task-instance",
    "lineNumber": 5
  },
  {
    "__docId__": 226,
    "kind": "test",
    "name": "it9",
    "testId": 9,
    "memberof": "test/actions/task-instance.test.js~describe8",
    "testDepth": 1,
    "static": true,
    "longname": "test/actions/task-instance.test.js~describe8.it9",
    "access": null,
    "description": "exports NOTIFICATION_ACTION",
    "lineNumber": 7,
    "testTargets": [
      "NOTIFICATION_ACTION"
    ]
  },
  {
    "__docId__": 227,
    "kind": "test",
    "name": "describe10",
    "testId": 10,
    "memberof": "test/actions/task-instance.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/actions/task-instance.test.js~describe10",
    "access": null,
    "description": "actions/task-instance/createNotificationAction",
    "lineNumber": 12,
    "testTargets": [
      "createNotificationAction"
    ]
  },
  {
    "__docId__": 228,
    "kind": "test",
    "name": "it11",
    "testId": 11,
    "memberof": "test/actions/task-instance.test.js~describe10",
    "testDepth": 1,
    "static": true,
    "longname": "test/actions/task-instance.test.js~describe10.it11",
    "access": null,
    "description": "creates action from Notification",
    "lineNumber": 13
  },
  {
    "__docId__": 229,
    "kind": "testFile",
    "name": "test/actions/task.test.js",
    "content": "import * as taskActions from '../../src/actions/task';\nimport { expect } from 'chai';\ndescribe('actions/task', () => {\n    /** @test {NOTIFICATION_ACTION} */\n    it('exports NOTIFICATION_ACTION', () => {\n        expect(taskActions.TASK_INSTANCE_STATE_UPDATE_ACTION).to.exist;\n    });\n});\n",
    "static": true,
    "longname": "/home/topaxi/rxtask/tmp/test-build/test/actions/task.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 230,
    "kind": "test",
    "name": "describe12",
    "testId": 12,
    "memberof": "test/actions/task.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/actions/task.test.js~describe12",
    "access": null,
    "description": "actions/task",
    "lineNumber": 3
  },
  {
    "__docId__": 231,
    "kind": "test",
    "name": "it13",
    "testId": 13,
    "memberof": "test/actions/task.test.js~describe12",
    "testDepth": 1,
    "static": true,
    "longname": "test/actions/task.test.js~describe12.it13",
    "access": null,
    "description": "exports NOTIFICATION_ACTION",
    "lineNumber": 5,
    "testTargets": [
      "NOTIFICATION_ACTION"
    ]
  },
  {
    "__docId__": 232,
    "kind": "testFile",
    "name": "test/index.test.js",
    "content": "import * as index from '../src';\nimport { expect } from 'chai';\n/** @ignore */\ndescribe('index', () => {\n    it('exports Task', () => {\n        expect(index.Task).to.exist;\n        expect(index.task).to.exist;\n    });\n    it('exports TaskInstance', () => {\n        expect(index.TaskInstance).to.exist;\n    });\n});\n",
    "static": true,
    "longname": "/home/topaxi/rxtask/tmp/test-build/test/index.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 233,
    "kind": "test",
    "name": "describe14",
    "testId": 14,
    "memberof": "test/index.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/index.test.js~describe14",
    "access": null,
    "description": "index",
    "lineNumber": 4,
    "ignore": true
  },
  {
    "__docId__": 234,
    "kind": "test",
    "name": "it15",
    "testId": 15,
    "memberof": "test/index.test.js~describe14",
    "testDepth": 1,
    "static": true,
    "longname": "test/index.test.js~describe14.it15",
    "access": null,
    "description": "exports Task",
    "lineNumber": 5
  },
  {
    "__docId__": 235,
    "kind": "test",
    "name": "it16",
    "testId": 16,
    "memberof": "test/index.test.js~describe14",
    "testDepth": 1,
    "static": true,
    "longname": "test/index.test.js~describe14.it16",
    "access": null,
    "description": "exports TaskInstance",
    "lineNumber": 9
  },
  {
    "__docId__": 236,
    "kind": "testFile",
    "name": "test/operators/action-reducer.test.js",
    "content": "import { actionReducer } from '../../src/operators/action-reducer';\nimport { marbles } from 'rxjs-marbles';\nimport { stub } from 'sinon';\n/** @test {actionReducer} */\ndescribe('operators/actionReducer', () => {\n    let reducer;\n    beforeEach(() => {\n        reducer = stub();\n    });\n    it('set initial state', marbles(m => {\n        reducer\n            .withArgs(undefined, { type: 'EMPTY_ACTION' })\n            .returns('INITIAL_STATE');\n        reducer\n            .withArgs('INITIAL_STATE', { type: 'REDUCE!' })\n            .returns('REDUCED!');\n        reducer\n            .withArgs('REDUCED!', { type: 'REDUCE_AGAIN!' })\n            .returns('MORE_REDUCED!');\n        const avals = { a: { type: 'REDUCE!' }, b: { type: 'REDUCE_AGAIN!' } };\n        const expectedvals = {\n            x: 'INITIAL_STATE',\n            y: 'REDUCED!',\n            z: 'MORE_REDUCED!',\n        };\n        const a = m.cold('--a-b-|', avals); // prettier-ignore\n        const asubs = '^     !'; // prettier-ignore\n        const expected = m.cold('x-y-z-|', expectedvals);\n        const r = a.pipe(actionReducer(reducer));\n        m.expect(r).toBeObservable(expected);\n        m.expect(a).toHaveSubscriptions(asubs);\n    }));\n});\n",
    "static": true,
    "longname": "/home/topaxi/rxtask/tmp/test-build/test/operators/action-reducer.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 237,
    "kind": "test",
    "name": "describe17",
    "testId": 17,
    "memberof": "test/operators/action-reducer.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/operators/action-reducer.test.js~describe17",
    "access": null,
    "description": "operators/actionReducer",
    "lineNumber": 5,
    "testTargets": [
      "actionReducer"
    ]
  },
  {
    "__docId__": 238,
    "kind": "test",
    "name": "it18",
    "testId": 18,
    "memberof": "test/operators/action-reducer.test.js~describe17",
    "testDepth": 1,
    "static": true,
    "longname": "test/operators/action-reducer.test.js~describe17.it18",
    "access": null,
    "description": "set initial state",
    "lineNumber": 10
  },
  {
    "__docId__": 239,
    "kind": "testFile",
    "name": "test/operators/filter-not-null.test.js",
    "content": "import { filterNotNull } from '../../src/operators/filter-not-null';\nimport { marbles } from 'rxjs-marbles';\n/** @test {filterNotNull} */\ndescribe('operators/filterNotNull', () => {\n    it('filters null values', marbles(m => {\n        const avals = { a: null, b: undefined, c: '', d: null, e: 42 };\n        const expectedvals = {\n            x: undefined,\n            y: '',\n            z: 42,\n        };\n        const a = m.cold('abcde|', avals); // prettier-ignore\n        const asubs = '^    !'; // prettier-ignore\n        const expected = m.cold('-xy-z|', expectedvals);\n        const r = a.pipe(filterNotNull());\n        m.expect(r).toBeObservable(expected);\n        m.expect(a).toHaveSubscriptions(asubs);\n    }));\n});\n",
    "static": true,
    "longname": "/home/topaxi/rxtask/tmp/test-build/test/operators/filter-not-null.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 240,
    "kind": "test",
    "name": "describe19",
    "testId": 19,
    "memberof": "test/operators/filter-not-null.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/operators/filter-not-null.test.js~describe19",
    "access": null,
    "description": "operators/filterNotNull",
    "lineNumber": 4,
    "testTargets": [
      "filterNotNull"
    ]
  },
  {
    "__docId__": 241,
    "kind": "test",
    "name": "it20",
    "testId": 20,
    "memberof": "test/operators/filter-not-null.test.js~describe19",
    "testDepth": 1,
    "static": true,
    "longname": "test/operators/filter-not-null.test.js~describe19.it20",
    "access": null,
    "description": "filters null values",
    "lineNumber": 5
  },
  {
    "__docId__": 242,
    "kind": "testFile",
    "name": "test/operators/index.test.js",
    "content": "import * as index from '../../src/operators/index';\nimport { expect } from 'chai';\n/** @ignore */\ndescribe('operators/index', () => {\n    it('exports actionReducer', () => {\n        expect(index.actionReducer).to.exist;\n    });\n    it('exports filterNotNull', () => {\n        expect(index.filterNotNull).to.exist;\n    });\n    it('exports mapNonNull', () => {\n        expect(index.mapNonNull).to.exist;\n    });\n});\n",
    "static": true,
    "longname": "/home/topaxi/rxtask/tmp/test-build/test/operators/index.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 243,
    "kind": "test",
    "name": "describe21",
    "testId": 21,
    "memberof": "test/operators/index.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/operators/index.test.js~describe21",
    "access": null,
    "description": "operators/index",
    "lineNumber": 4,
    "ignore": true
  },
  {
    "__docId__": 244,
    "kind": "test",
    "name": "it22",
    "testId": 22,
    "memberof": "test/operators/index.test.js~describe21",
    "testDepth": 1,
    "static": true,
    "longname": "test/operators/index.test.js~describe21.it22",
    "access": null,
    "description": "exports actionReducer",
    "lineNumber": 5
  },
  {
    "__docId__": 245,
    "kind": "test",
    "name": "it23",
    "testId": 23,
    "memberof": "test/operators/index.test.js~describe21",
    "testDepth": 1,
    "static": true,
    "longname": "test/operators/index.test.js~describe21.it23",
    "access": null,
    "description": "exports filterNotNull",
    "lineNumber": 8
  },
  {
    "__docId__": 246,
    "kind": "test",
    "name": "it24",
    "testId": 24,
    "memberof": "test/operators/index.test.js~describe21",
    "testDepth": 1,
    "static": true,
    "longname": "test/operators/index.test.js~describe21.it24",
    "access": null,
    "description": "exports mapNonNull",
    "lineNumber": 11
  },
  {
    "__docId__": 247,
    "kind": "testFile",
    "name": "test/operators/map-non-null.test.js",
    "content": "import { mapNonNull } from '../../src/operators/map-non-null';\nimport { marbles } from 'rxjs-marbles';\nconst selectValue = (v) => v.value;\n/** @test {mapNonNull} */\ndescribe('operators/mapNonNull', () => {\n    it('maps values and filters resulting null values', marbles(m => {\n        const avals = {\n            a: { value: null },\n            b: { value: undefined },\n            c: { value: '' },\n            d: { value: null },\n            e: { value: 42 },\n        };\n        const expectedvals = {\n            x: undefined,\n            y: '',\n            z: 42,\n        };\n        const a = m.cold('abcde|', avals); // prettier-ignore\n        const asubs = '^    !'; // prettier-ignore\n        const expected = m.cold('-xy-z|', expectedvals);\n        const r = a.pipe(mapNonNull(selectValue));\n        m.expect(r).toBeObservable(expected);\n        m.expect(a).toHaveSubscriptions(asubs);\n    }));\n});\n",
    "static": true,
    "longname": "/home/topaxi/rxtask/tmp/test-build/test/operators/map-non-null.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 248,
    "kind": "test",
    "name": "describe25",
    "testId": 25,
    "memberof": "test/operators/map-non-null.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/operators/map-non-null.test.js~describe25",
    "access": null,
    "description": "operators/mapNonNull",
    "lineNumber": 5,
    "testTargets": [
      "mapNonNull"
    ]
  },
  {
    "__docId__": 249,
    "kind": "test",
    "name": "it26",
    "testId": 26,
    "memberof": "test/operators/map-non-null.test.js~describe25",
    "testDepth": 1,
    "static": true,
    "longname": "test/operators/map-non-null.test.js~describe25.it26",
    "access": null,
    "description": "maps values and filters resulting null values",
    "lineNumber": 6
  },
  {
    "__docId__": 250,
    "kind": "testFile",
    "name": "test/reducers/task-instance.test.js",
    "content": "import { Notification } from 'rxjs/Notification';\nimport * as taskInstance from '../../src/reducers/task-instance';\nimport { createNotificationAction, NOTIFICATION_ACTION, } from '../../src/actions/task-instance';\nimport { EMPTY_ACTION } from './helpers';\nimport { expect } from 'chai';\nfunction createNextNotificationAction(value) {\n    return createNotificationAction(Notification.createNext(value));\n}\nfunction createErrorNotificationAction(value) {\n    return createNotificationAction(Notification.createError(value));\n}\nfunction createCompleteNotificationAction() {\n    return createNotificationAction(Notification.createComplete());\n}\ndescribe('reducers/TaskInstance', () => {\n    describe('Static states', () => {\n        /** @test {PENDING_STATE} */\n        it('defines a pending state', () => {\n            expect(taskInstance.PENDING_STATE).to.deep.equal({\n                stateLabel: \"pending\" /* PENDING */,\n                hasValue: false,\n                currentValue: undefined,\n                error: null,\n            });\n        });\n        /** @test {RUNNING_STATE} */\n        it('defines a running state', () => {\n            expect(taskInstance.RUNNING_STATE).to.deep.equal({\n                stateLabel: \"running\" /* RUNNING */,\n                hasValue: false,\n                currentValue: undefined,\n                error: null,\n            });\n        });\n        /** @test {CANCELLED_STATE} */\n        it('defines a cancelled state', () => {\n            expect(taskInstance.CANCELLED_STATE).to.deep.equal({\n                stateLabel: \"cancelled\" /* CANCELLED */,\n                hasValue: false,\n                currentValue: undefined,\n                error: null,\n            });\n        });\n    });\n    /** @test {reducer} */\n    describe('Reducer', () => {\n        describe('Initial state', () => {\n            it('equals PENDING_STATE', () => {\n                expect(taskInstance.reducer(undefined, EMPTY_ACTION)).to.deep.equal(taskInstance.PENDING_STATE);\n            });\n        });\n        describe('Notifications', () => {\n            let state;\n            beforeEach(() => {\n                state = taskInstance.PENDING_STATE;\n            });\n            describe('Next Notification', () => {\n                beforeEach(() => {\n                    state = taskInstance.reducer(state, createNextNotificationAction('VALUE'));\n                });\n                it('sets state to running', () => {\n                    expect(state.stateLabel).to.equal(\"running\" /* RUNNING */);\n                });\n                it('marks state to having a value', () => {\n                    expect(state.hasValue).to.be.true;\n                });\n                it('sets current value', () => {\n                    expect(state.currentValue).to.equal('VALUE');\n                    state = taskInstance.reducer(state, createNextNotificationAction('NEXT VALUE'));\n                    expect(state.currentValue).to.equal('NEXT VALUE');\n                });\n                it('does not modify error state', () => {\n                    state = taskInstance.reducer({ error: 'error' }, createNextNotificationAction('NEXT VALUE'));\n                    expect(state.error).to.equal('error');\n                });\n            });\n            describe('Error Notification', () => {\n                beforeEach(() => {\n                    state = taskInstance.reducer(state, createErrorNotificationAction('ERROR'));\n                });\n                it('sets state to error', () => {\n                    expect(state.stateLabel).to.equal(\"error\" /* ERROR */);\n                });\n                it('does not modify hasValue', () => {\n                    expect(state.hasValue).to.be.false;\n                    state = taskInstance.reducer({ hasValue: true }, createErrorNotificationAction('ERROR'));\n                    expect(state.hasValue).to.be.true;\n                });\n                it('does not modify current value', () => {\n                    expect(state.currentValue).to.be.undefined;\n                    state = taskInstance.reducer({ currentValue: true }, createErrorNotificationAction('ERROR'));\n                    expect(state.currentValue).to.be.true;\n                });\n                it('sets error property', () => {\n                    expect(state.error).to.equal('ERROR');\n                });\n            });\n            describe('Complete Notification', () => {\n                beforeEach(() => {\n                    state = taskInstance.reducer(state, createCompleteNotificationAction());\n                });\n                it('sets state to complete', () => {\n                    expect(state.stateLabel).to.equal(\"complete\" /* COMPLETE */);\n                });\n                it('does not modify hasValue', () => {\n                    expect(state.hasValue).to.be.false;\n                    state = taskInstance.reducer({ hasValue: true }, createCompleteNotificationAction());\n                    expect(state.hasValue).to.be.true;\n                });\n                it('does not modify current value', () => {\n                    expect(state.currentValue).to.be.undefined;\n                    state = taskInstance.reducer({ currentValue: true }, createCompleteNotificationAction());\n                    expect(state.currentValue).to.be.true;\n                });\n                it('does not modify error state', () => {\n                    state = taskInstance.reducer({ error: 'error' }, createCompleteNotificationAction());\n                    expect(state.error).to.equal('error');\n                });\n            });\n            describe('Unknown Notification', () => {\n                beforeEach(() => {\n                    state = taskInstance.reducer(state, {\n                        type: NOTIFICATION_ACTION,\n                        payload: { kind: '__UNKOWN' },\n                    });\n                });\n                it('does not modify any state', () => {\n                    expect(state).to.deep.equal(taskInstance.PENDING_STATE);\n                });\n            });\n        });\n    });\n    describe('Filters', () => {\n        /** @test {isPending} */\n        it('isPending', () => {\n            expect(taskInstance.isPending(\"pending\" /* PENDING */)).to.be.true;\n            expect(taskInstance.isPending(\"running\" /* RUNNING */)).to.be\n                .false;\n            expect(taskInstance.isPending(\"complete\" /* COMPLETE */)).to.be\n                .false;\n            expect(taskInstance.isPending(\"cancelled\" /* CANCELLED */)).to.be\n                .false;\n            expect(taskInstance.isPending(\"error\" /* ERROR */)).to.be.false;\n        });\n        /** @test {isRunning} */\n        it('isRunning', () => {\n            expect(taskInstance.isRunning(\"pending\" /* PENDING */)).to.be\n                .false;\n            expect(taskInstance.isRunning(\"running\" /* RUNNING */)).to.be.true;\n            expect(taskInstance.isRunning(\"complete\" /* COMPLETE */)).to.be\n                .false;\n            expect(taskInstance.isRunning(\"cancelled\" /* CANCELLED */)).to.be\n                .false;\n            expect(taskInstance.isRunning(\"error\" /* ERROR */)).to.be.false;\n        });\n        /** @test {isComplete} */\n        it('isComplete', () => {\n            expect(taskInstance.isComplete(\"pending\" /* PENDING */)).to.be\n                .false;\n            expect(taskInstance.isComplete(\"running\" /* RUNNING */)).to.be\n                .false;\n            expect(taskInstance.isComplete(\"complete\" /* COMPLETE */)).to.be\n                .true;\n            expect(taskInstance.isComplete(\"cancelled\" /* CANCELLED */)).to.be\n                .false;\n            expect(taskInstance.isComplete(\"error\" /* ERROR */)).to.be.false;\n        });\n        /** @test {isCancelled} */\n        it('isCancelled', () => {\n            expect(taskInstance.isCancelled(\"pending\" /* PENDING */)).to.be\n                .false;\n            expect(taskInstance.isCancelled(\"running\" /* RUNNING */)).to.be\n                .false;\n            expect(taskInstance.isCancelled(\"complete\" /* COMPLETE */)).to.be\n                .false;\n            expect(taskInstance.isCancelled(\"cancelled\" /* CANCELLED */)).to.be\n                .true;\n            expect(taskInstance.isCancelled(\"error\" /* ERROR */)).to.be\n                .false;\n        });\n        /** @test {isError} */\n        it('isError', () => {\n            expect(taskInstance.isError(\"pending\" /* PENDING */)).to.be.false;\n            expect(taskInstance.isError(\"running\" /* RUNNING */)).to.be.false;\n            expect(taskInstance.isError(\"complete\" /* COMPLETE */)).to.be.false;\n            expect(taskInstance.isError(\"cancelled\" /* CANCELLED */)).to.be\n                .false;\n            expect(taskInstance.isError(\"error\" /* ERROR */)).to.be.true;\n        });\n    });\n    describe('Selectors', () => {\n        /** @test {selectValue} */\n        it('selectValue', () => {\n            expect(taskInstance.selectValue({ currentValue: 'VALUE' })).to.equal('VALUE');\n        });\n        /** @test {selectHasValue} */\n        it('selectHasValue', () => {\n            expect(taskInstance.selectHasValue({ hasValue: true })).to.be.true;\n        });\n        /** @test {selectState} */\n        it('selectState', () => {\n            expect(taskInstance.selectStateLabel({\n                stateLabel: \"error\" /* ERROR */,\n            })).to.equal(\"error\" /* ERROR */);\n        });\n        /** @test {selectError} */\n        it('selectError', () => {\n            expect(taskInstance.selectError({ error: 'ERROR' })).to.equal('ERROR');\n        });\n    });\n    describe('helpers', () => {\n        /** @test {hasValue} */\n        it('hasValue', () => {\n            const hasValue = [\n                { hasValue: true, stateLabel: \"running\" /* RUNNING */ },\n                { hasValue: true, stateLabel: \"complete\" /* COMPLETE */ },\n            ];\n            const hasNoValue = [\n                { hasValue: false, stateLabel: \"pending\" /* PENDING */ },\n                { hasValue: false, stateLabel: \"running\" /* RUNNING */ },\n                { hasValue: false, stateLabel: \"cancelled\" /* CANCELLED */ },\n                { hasValue: false, stateLabel: \"complete\" /* COMPLETE */ },\n                { hasValue: false, stateLabel: \"error\" /* ERROR */ },\n                // As something went wrong, we assume we don't have a valid value\n                { hasValue: true, stateLabel: \"error\" /* ERROR */ },\n                // Cancelled task values probably don't make sense\n                { hasValue: true, stateLabel: \"cancelled\" /* CANCELLED */ },\n                // Tasks have no initial value\n                { hasValue: true, stateLabel: \"pending\" /* PENDING */ },\n            ];\n            const expectHasValue = (has) => (v) => expect(taskInstance.hasValue(v), JSON.stringify(v)).to.equal(has);\n            hasValue.forEach(expectHasValue(true));\n            hasNoValue.forEach(expectHasValue(false));\n        });\n    });\n});\n",
    "static": true,
    "longname": "/home/topaxi/rxtask/tmp/test-build/test/reducers/task-instance.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 251,
    "kind": "test",
    "name": "describe27",
    "testId": 27,
    "memberof": "test/reducers/task-instance.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27",
    "access": null,
    "description": "reducers/TaskInstance",
    "lineNumber": 15
  },
  {
    "__docId__": 252,
    "kind": "test",
    "name": "describe28",
    "testId": 28,
    "memberof": "test/reducers/task-instance.test.js~describe27",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe28",
    "access": null,
    "description": "Static states",
    "lineNumber": 16
  },
  {
    "__docId__": 253,
    "kind": "test",
    "name": "it29",
    "testId": 29,
    "memberof": "test/reducers/task-instance.test.js~describe27.describe28",
    "testDepth": 2,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe28.it29",
    "access": null,
    "description": "defines a pending state",
    "lineNumber": 18,
    "testTargets": [
      "PENDING_STATE"
    ]
  },
  {
    "__docId__": 254,
    "kind": "test",
    "name": "it30",
    "testId": 30,
    "memberof": "test/reducers/task-instance.test.js~describe27.describe28",
    "testDepth": 2,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe28.it30",
    "access": null,
    "description": "defines a running state",
    "lineNumber": 27,
    "testTargets": [
      "RUNNING_STATE"
    ]
  },
  {
    "__docId__": 255,
    "kind": "test",
    "name": "it31",
    "testId": 31,
    "memberof": "test/reducers/task-instance.test.js~describe27.describe28",
    "testDepth": 2,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe28.it31",
    "access": null,
    "description": "defines a cancelled state",
    "lineNumber": 36,
    "testTargets": [
      "CANCELLED_STATE"
    ]
  },
  {
    "__docId__": 256,
    "kind": "test",
    "name": "describe32",
    "testId": 32,
    "memberof": "test/reducers/task-instance.test.js~describe27",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe32",
    "access": null,
    "description": "Reducer",
    "lineNumber": 46,
    "testTargets": [
      "reducer"
    ]
  },
  {
    "__docId__": 257,
    "kind": "test",
    "name": "describe33",
    "testId": 33,
    "memberof": "test/reducers/task-instance.test.js~describe27.describe32",
    "testDepth": 2,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe32.describe33",
    "access": null,
    "description": "Initial state",
    "lineNumber": 47
  },
  {
    "__docId__": 258,
    "kind": "test",
    "name": "it34",
    "testId": 34,
    "memberof": "test/reducers/task-instance.test.js~describe27.describe32.describe33",
    "testDepth": 3,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe32.describe33.it34",
    "access": null,
    "description": "equals PENDING_STATE",
    "lineNumber": 48
  },
  {
    "__docId__": 259,
    "kind": "test",
    "name": "describe35",
    "testId": 35,
    "memberof": "test/reducers/task-instance.test.js~describe27.describe32",
    "testDepth": 2,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe32.describe35",
    "access": null,
    "description": "Notifications",
    "lineNumber": 52
  },
  {
    "__docId__": 260,
    "kind": "test",
    "name": "describe36",
    "testId": 36,
    "memberof": "test/reducers/task-instance.test.js~describe27.describe32.describe35",
    "testDepth": 3,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe32.describe35.describe36",
    "access": null,
    "description": "Next Notification",
    "lineNumber": 57
  },
  {
    "__docId__": 261,
    "kind": "test",
    "name": "it37",
    "testId": 37,
    "memberof": "test/reducers/task-instance.test.js~describe27.describe32.describe35.describe36",
    "testDepth": 4,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe32.describe35.describe36.it37",
    "access": null,
    "description": "sets state to running",
    "lineNumber": 61
  },
  {
    "__docId__": 262,
    "kind": "test",
    "name": "it38",
    "testId": 38,
    "memberof": "test/reducers/task-instance.test.js~describe27.describe32.describe35.describe36",
    "testDepth": 4,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe32.describe35.describe36.it38",
    "access": null,
    "description": "marks state to having a value",
    "lineNumber": 64
  },
  {
    "__docId__": 263,
    "kind": "test",
    "name": "it39",
    "testId": 39,
    "memberof": "test/reducers/task-instance.test.js~describe27.describe32.describe35.describe36",
    "testDepth": 4,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe32.describe35.describe36.it39",
    "access": null,
    "description": "sets current value",
    "lineNumber": 67
  },
  {
    "__docId__": 264,
    "kind": "test",
    "name": "it40",
    "testId": 40,
    "memberof": "test/reducers/task-instance.test.js~describe27.describe32.describe35.describe36",
    "testDepth": 4,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe32.describe35.describe36.it40",
    "access": null,
    "description": "does not modify error state",
    "lineNumber": 72
  },
  {
    "__docId__": 265,
    "kind": "test",
    "name": "describe41",
    "testId": 41,
    "memberof": "test/reducers/task-instance.test.js~describe27.describe32.describe35",
    "testDepth": 3,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe32.describe35.describe41",
    "access": null,
    "description": "Error Notification",
    "lineNumber": 77
  },
  {
    "__docId__": 266,
    "kind": "test",
    "name": "it42",
    "testId": 42,
    "memberof": "test/reducers/task-instance.test.js~describe27.describe32.describe35.describe41",
    "testDepth": 4,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe32.describe35.describe41.it42",
    "access": null,
    "description": "sets state to error",
    "lineNumber": 81
  },
  {
    "__docId__": 267,
    "kind": "test",
    "name": "it43",
    "testId": 43,
    "memberof": "test/reducers/task-instance.test.js~describe27.describe32.describe35.describe41",
    "testDepth": 4,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe32.describe35.describe41.it43",
    "access": null,
    "description": "does not modify hasValue",
    "lineNumber": 84
  },
  {
    "__docId__": 268,
    "kind": "test",
    "name": "it44",
    "testId": 44,
    "memberof": "test/reducers/task-instance.test.js~describe27.describe32.describe35.describe41",
    "testDepth": 4,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe32.describe35.describe41.it44",
    "access": null,
    "description": "does not modify current value",
    "lineNumber": 89
  },
  {
    "__docId__": 269,
    "kind": "test",
    "name": "it45",
    "testId": 45,
    "memberof": "test/reducers/task-instance.test.js~describe27.describe32.describe35.describe41",
    "testDepth": 4,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe32.describe35.describe41.it45",
    "access": null,
    "description": "sets error property",
    "lineNumber": 94
  },
  {
    "__docId__": 270,
    "kind": "test",
    "name": "describe46",
    "testId": 46,
    "memberof": "test/reducers/task-instance.test.js~describe27.describe32.describe35",
    "testDepth": 3,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe32.describe35.describe46",
    "access": null,
    "description": "Complete Notification",
    "lineNumber": 98
  },
  {
    "__docId__": 271,
    "kind": "test",
    "name": "it47",
    "testId": 47,
    "memberof": "test/reducers/task-instance.test.js~describe27.describe32.describe35.describe46",
    "testDepth": 4,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe32.describe35.describe46.it47",
    "access": null,
    "description": "sets state to complete",
    "lineNumber": 102
  },
  {
    "__docId__": 272,
    "kind": "test",
    "name": "it48",
    "testId": 48,
    "memberof": "test/reducers/task-instance.test.js~describe27.describe32.describe35.describe46",
    "testDepth": 4,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe32.describe35.describe46.it48",
    "access": null,
    "description": "does not modify hasValue",
    "lineNumber": 105
  },
  {
    "__docId__": 273,
    "kind": "test",
    "name": "it49",
    "testId": 49,
    "memberof": "test/reducers/task-instance.test.js~describe27.describe32.describe35.describe46",
    "testDepth": 4,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe32.describe35.describe46.it49",
    "access": null,
    "description": "does not modify current value",
    "lineNumber": 110
  },
  {
    "__docId__": 274,
    "kind": "test",
    "name": "it50",
    "testId": 50,
    "memberof": "test/reducers/task-instance.test.js~describe27.describe32.describe35.describe46",
    "testDepth": 4,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe32.describe35.describe46.it50",
    "access": null,
    "description": "does not modify error state",
    "lineNumber": 115
  },
  {
    "__docId__": 275,
    "kind": "test",
    "name": "describe51",
    "testId": 51,
    "memberof": "test/reducers/task-instance.test.js~describe27.describe32.describe35",
    "testDepth": 3,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe32.describe35.describe51",
    "access": null,
    "description": "Unknown Notification",
    "lineNumber": 120
  },
  {
    "__docId__": 276,
    "kind": "test",
    "name": "it52",
    "testId": 52,
    "memberof": "test/reducers/task-instance.test.js~describe27.describe32.describe35.describe51",
    "testDepth": 4,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe32.describe35.describe51.it52",
    "access": null,
    "description": "does not modify any state",
    "lineNumber": 127
  },
  {
    "__docId__": 277,
    "kind": "test",
    "name": "describe53",
    "testId": 53,
    "memberof": "test/reducers/task-instance.test.js~describe27",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe53",
    "access": null,
    "description": "Filters",
    "lineNumber": 133
  },
  {
    "__docId__": 278,
    "kind": "test",
    "name": "it54",
    "testId": 54,
    "memberof": "test/reducers/task-instance.test.js~describe27.describe53",
    "testDepth": 2,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe53.it54",
    "access": null,
    "description": "isPending",
    "lineNumber": 135,
    "testTargets": [
      "isPending"
    ]
  },
  {
    "__docId__": 279,
    "kind": "test",
    "name": "it55",
    "testId": 55,
    "memberof": "test/reducers/task-instance.test.js~describe27.describe53",
    "testDepth": 2,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe53.it55",
    "access": null,
    "description": "isRunning",
    "lineNumber": 146,
    "testTargets": [
      "isRunning"
    ]
  },
  {
    "__docId__": 280,
    "kind": "test",
    "name": "it56",
    "testId": 56,
    "memberof": "test/reducers/task-instance.test.js~describe27.describe53",
    "testDepth": 2,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe53.it56",
    "access": null,
    "description": "isComplete",
    "lineNumber": 157,
    "testTargets": [
      "isComplete"
    ]
  },
  {
    "__docId__": 281,
    "kind": "test",
    "name": "it57",
    "testId": 57,
    "memberof": "test/reducers/task-instance.test.js~describe27.describe53",
    "testDepth": 2,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe53.it57",
    "access": null,
    "description": "isCancelled",
    "lineNumber": 169,
    "testTargets": [
      "isCancelled"
    ]
  },
  {
    "__docId__": 282,
    "kind": "test",
    "name": "it58",
    "testId": 58,
    "memberof": "test/reducers/task-instance.test.js~describe27.describe53",
    "testDepth": 2,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe53.it58",
    "access": null,
    "description": "isError",
    "lineNumber": 182,
    "testTargets": [
      "isError"
    ]
  },
  {
    "__docId__": 283,
    "kind": "test",
    "name": "describe59",
    "testId": 59,
    "memberof": "test/reducers/task-instance.test.js~describe27",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe59",
    "access": null,
    "description": "Selectors",
    "lineNumber": 191
  },
  {
    "__docId__": 284,
    "kind": "test",
    "name": "it60",
    "testId": 60,
    "memberof": "test/reducers/task-instance.test.js~describe27.describe59",
    "testDepth": 2,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe59.it60",
    "access": null,
    "description": "selectValue",
    "lineNumber": 193,
    "testTargets": [
      "selectValue"
    ]
  },
  {
    "__docId__": 285,
    "kind": "test",
    "name": "it61",
    "testId": 61,
    "memberof": "test/reducers/task-instance.test.js~describe27.describe59",
    "testDepth": 2,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe59.it61",
    "access": null,
    "description": "selectHasValue",
    "lineNumber": 197,
    "testTargets": [
      "selectHasValue"
    ]
  },
  {
    "__docId__": 286,
    "kind": "test",
    "name": "it62",
    "testId": 62,
    "memberof": "test/reducers/task-instance.test.js~describe27.describe59",
    "testDepth": 2,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe59.it62",
    "access": null,
    "description": "selectState",
    "lineNumber": 201,
    "testTargets": [
      "selectState"
    ]
  },
  {
    "__docId__": 287,
    "kind": "test",
    "name": "it63",
    "testId": 63,
    "memberof": "test/reducers/task-instance.test.js~describe27.describe59",
    "testDepth": 2,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe59.it63",
    "access": null,
    "description": "selectError",
    "lineNumber": 207,
    "testTargets": [
      "selectError"
    ]
  },
  {
    "__docId__": 288,
    "kind": "test",
    "name": "describe64",
    "testId": 64,
    "memberof": "test/reducers/task-instance.test.js~describe27",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe64",
    "access": null,
    "description": "helpers",
    "lineNumber": 211
  },
  {
    "__docId__": 289,
    "kind": "test",
    "name": "it65",
    "testId": 65,
    "memberof": "test/reducers/task-instance.test.js~describe27.describe64",
    "testDepth": 2,
    "static": true,
    "longname": "test/reducers/task-instance.test.js~describe27.describe64.it65",
    "access": null,
    "description": "hasValue",
    "lineNumber": 213,
    "testTargets": [
      "hasValue"
    ]
  },
  {
    "__docId__": 290,
    "kind": "testFile",
    "name": "test/reducers/task.test.js",
    "content": "import * as task from '../../src/reducers/task';\nimport { EMPTY_ACTION, createStateMatcher } from './helpers';\nimport { expect } from 'chai';\nimport { TASK_INSTANCE_STATE_UPDATE_ACTION, } from '../../src/actions/task';\nimport { createAction } from '../../src/actions';\nconst expectStateChange = createStateMatcher(task.reducer);\nlet taskInstanceId = 0;\nclass TaskInstanceMock {\n    constructor() {\n        this.taskInstanceId = ++taskInstanceId;\n    }\n}\nclass TaskInstanceWithStateLabelMock {\n    constructor(taskInstanceStateLabel, taskInstance = new TaskInstanceMock()) {\n        this.taskInstanceStateLabel = taskInstanceStateLabel;\n        this.taskInstance = taskInstance;\n    }\n    toAction() {\n        return createTaskInstanceStateUpdateAction(this);\n    }\n    changeState(stateLabel) {\n        return new TaskInstanceWithStateLabelMock(stateLabel, this.taskInstance);\n    }\n}\nfunction createTaskInstance(stateLabel) {\n    const taskInstanceWithState = new TaskInstanceWithStateLabelMock(stateLabel);\n    return {\n        taskInstanceWithState,\n        taskInstance: taskInstanceWithState.taskInstance,\n        action: taskInstanceWithState.toAction(),\n    };\n}\nfunction createTaskInstanceStateUpdateAction(taskInstanceWithStateLabel) {\n    return createAction(TASK_INSTANCE_STATE_UPDATE_ACTION, taskInstanceWithStateLabel);\n}\ndescribe('reducers/Task', () => {\n    describe('Static states', () => {\n        /** @test {INITIAL_STATE} */\n        it('defines an initial state', () => {\n            expect(task.INITIAL_STATE).to.deep.equal({\n                performed: 0,\n                pending: [],\n                running: [],\n                successful: 0,\n                cancelled: 0,\n                errored: 0,\n                completed: 0,\n                last: null,\n                lastRunning: null,\n                lastSuccessful: null,\n                lastCancelled: null,\n                lastErrored: null,\n                lastCompleted: null,\n            });\n        });\n    });\n    /** @test {reducer} */\n    describe('Reducer', () => {\n        describe('Initial state', () => {\n            it('equals INITIAL_STATE', () => {\n                expectStateChange(undefined, EMPTY_ACTION, task.INITIAL_STATE);\n            });\n        });\n        describe('TaskInstance state changes', () => {\n            let state;\n            beforeEach(() => {\n                state = task.INITIAL_STATE;\n            });\n            describe('PENDING', () => {\n                it('counts performed and tracks pending instances', () => {\n                    var { taskInstance, action } = createTaskInstance(\"pending\" /* PENDING */);\n                    state = expectStateChange(state, action, {\n                        performed: 1,\n                        pending: [taskInstance],\n                        last: taskInstance,\n                    });\n                    var { taskInstance, action } = createTaskInstance(\"pending\" /* PENDING */);\n                    expectStateChange(state, action, {\n                        performed: 2,\n                        pending: state.pending.concat(taskInstance),\n                        last: taskInstance,\n                    });\n                });\n            });\n            describe('RUNNING', () => {\n                let pending1 = createTaskInstance(\"pending\" /* PENDING */);\n                let pending2 = createTaskInstance(\"pending\" /* PENDING */);\n                let pending3 = createTaskInstance(\"pending\" /* PENDING */);\n                beforeEach(() => {\n                    state = task.reducer(state, pending1.action);\n                    state = task.reducer(state, pending2.action);\n                    state = task.reducer(state, pending3.action);\n                    expect(state.pending.length).to.equal(3);\n                });\n                it('removes from pending and tracks running', () => {\n                    let running1 = pending1.taskInstanceWithState.changeState(\"running\" /* RUNNING */);\n                    state = expectStateChange(state, running1.toAction(), {\n                        pending: [pending2.taskInstance, pending3.taskInstance],\n                        running: [running1.taskInstance],\n                        lastRunning: running1.taskInstance,\n                    });\n                    let running3 = pending3.taskInstanceWithState.changeState(\"running\" /* RUNNING */);\n                    state = expectStateChange(state, running3.toAction(), {\n                        pending: [pending2.taskInstance],\n                        running: [running1.taskInstance, pending3.taskInstance],\n                        lastRunning: running3.taskInstance,\n                    });\n                });\n            });\n            describe('CANCELLED', () => {\n                let pending1 = createTaskInstance(\"pending\" /* PENDING */);\n                let running1 = createTaskInstance(\"running\" /* RUNNING */);\n                let running2 = createTaskInstance(\"running\" /* RUNNING */);\n                beforeEach(() => {\n                    state = task.reducer(state, pending1.action);\n                    state = task.reducer(state, running1.action);\n                    state = task.reducer(state, running2.action);\n                    expect(state.pending.length).to.equal(1);\n                    expect(state.running.length).to.equal(2);\n                });\n                it('removes from pending and running and tracks cancelled', () => {\n                    let cancelled1 = pending1.taskInstanceWithState.changeState(\"cancelled\" /* CANCELLED */);\n                    state = expectStateChange(state, cancelled1.toAction(), {\n                        pending: [],\n                        running: [running1.taskInstance, running2.taskInstance],\n                        cancelled: 1,\n                        lastCancelled: cancelled1.taskInstance,\n                    });\n                    let cancelled2 = running1.taskInstanceWithState.changeState(\"cancelled\" /* CANCELLED */);\n                    state = expectStateChange(state, cancelled2.toAction(), {\n                        running: [running2.taskInstance],\n                        cancelled: 2,\n                        lastCancelled: cancelled2.taskInstance,\n                    });\n                });\n            });\n            describe('ERROR', () => {\n                let pending1 = createTaskInstance(\"pending\" /* PENDING */);\n                let running1 = createTaskInstance(\"running\" /* RUNNING */);\n                let running2 = createTaskInstance(\"running\" /* RUNNING */);\n                beforeEach(() => {\n                    state = task.reducer(state, pending1.action);\n                    state = task.reducer(state, running1.action);\n                    state = task.reducer(state, running2.action);\n                    state = Object.assign({}, state, { completed: 1 });\n                    expect(state.pending.length).to.equal(1);\n                    expect(state.running.length).to.equal(2);\n                });\n                it('removes from pending and running and tracks errored', () => {\n                    let errored1 = pending1.taskInstanceWithState.changeState(\"error\" /* ERROR */);\n                    state = expectStateChange(state, errored1.toAction(), {\n                        pending: [],\n                        running: [running1.taskInstance, running2.taskInstance],\n                        errored: 1,\n                        completed: 2,\n                        lastCompleted: errored1.taskInstance,\n                        lastErrored: errored1.taskInstance,\n                    });\n                    let errored2 = running1.taskInstanceWithState.changeState(\"error\" /* ERROR */);\n                    state = expectStateChange(state, errored2.toAction(), {\n                        running: [running2.taskInstance],\n                        errored: 2,\n                        completed: 3,\n                        lastCompleted: errored2.taskInstance,\n                        lastErrored: errored2.taskInstance,\n                    });\n                });\n            });\n            describe('COMPLETE', () => {\n                let pending1 = createTaskInstance(\"pending\" /* PENDING */);\n                let running1 = createTaskInstance(\"running\" /* RUNNING */);\n                let running2 = createTaskInstance(\"running\" /* RUNNING */);\n                beforeEach(() => {\n                    state = task.reducer(state, pending1.action);\n                    state = task.reducer(state, running1.action);\n                    state = task.reducer(state, running2.action);\n                    state = Object.assign({}, state, { errored: 1, completed: 1 });\n                    expect(state.pending.length).to.equal(1);\n                    expect(state.running.length).to.equal(2);\n                });\n                it('removes from pending and running and tracks completed', () => {\n                    let completed1 = pending1.taskInstanceWithState.changeState(\"complete\" /* COMPLETE */);\n                    state = expectStateChange(state, completed1.toAction(), {\n                        pending: [],\n                        running: [running1.taskInstance, running2.taskInstance],\n                        successful: 1,\n                        completed: 2,\n                        lastSuccessful: completed1.taskInstance,\n                        lastCompleted: completed1.taskInstance,\n                    });\n                    let completed2 = running1.taskInstanceWithState.changeState(\"complete\" /* COMPLETE */);\n                    state = expectStateChange(state, completed2.toAction(), {\n                        running: [running2.taskInstance],\n                        successful: 2,\n                        completed: 3,\n                        lastSuccessful: completed2.taskInstance,\n                        lastCompleted: completed2.taskInstance,\n                    });\n                });\n            });\n            describe('Unkown TaskInstance state', () => {\n                let { action } = createTaskInstance('__unkown_state__');\n                expect(() => task.reducer(state, action)).to.throw(TypeError, 'Unkown value __unkown_state__');\n            });\n        });\n    });\n    describe('Selectors', () => {\n        let state;\n        let last = {};\n        let lastRunning = {};\n        let lastSuccessful = {};\n        let lastCancelled = {};\n        let lastErrored = {};\n        let lastCompleted = {};\n        let pending = [{}, last];\n        let running = [lastRunning];\n        beforeEach(() => {\n            state = {\n                performed: 1,\n                pending,\n                running,\n                successful: 2,\n                cancelled: 3,\n                errored: 4,\n                completed: 5,\n                last,\n                lastRunning,\n                lastSuccessful,\n                lastCancelled,\n                lastErrored,\n                lastCompleted,\n            };\n        });\n        /** @test {selectPerformed} */\n        it('selectPerformed', () => {\n            expect(task.selectPerformed(state)).to.equal(1);\n        });\n        /** @test {selectPending} */\n        it('selectPending', () => {\n            expect(task.selectPending(state)).to.equal(pending);\n        });\n        /** @test {selectRunning} */\n        it('selectRunning', () => {\n            expect(task.selectRunning(state)).to.equal(running);\n        });\n        /** @test {selectSuccessful} */\n        it('selectSuccessful', () => {\n            expect(task.selectSuccessful(state)).to.equal(2);\n        });\n        /** @test {selectCancelled} */\n        it('selectCancelled', () => {\n            expect(task.selectCancelled(state)).to.equal(3);\n        });\n        /** @test {selectErrored} */\n        it('selectErrored', () => {\n            expect(task.selectErrored(state)).to.equal(4);\n        });\n        /** @test {selectCompleted} */\n        it('selectCompleted', () => {\n            expect(task.selectCompleted(state)).to.equal(5);\n        });\n        /** @test {selectLast} */\n        it('selectLast', () => {\n            expect(task.selectLast(state)).to.equal(last);\n        });\n        /** @test {selectLastRunning} */\n        it('selectLastRunning', () => {\n            expect(task.selectLastRunning(state)).to.equal(lastRunning);\n        });\n        /** @test {selectLastSuccessful} */\n        it('selectLastSuccesful', () => {\n            expect(task.selectLastSuccessful(state)).to.equal(lastSuccessful);\n        });\n        /** @test {selectLastCancelled} */\n        it('selectLastCancelled', () => {\n            expect(task.selectLastCancelled(state)).to.equal(lastCancelled);\n        });\n        /** @test {selectLastErrored} */\n        it('selectLastErrored', () => {\n            expect(task.selectLastErrored(state)).to.equal(lastErrored);\n        });\n        /** @test {selectLastCompleted} */\n        it('selectLastCompleted', () => {\n            expect(task.selectLastCompleted(state)).to.equal(lastCompleted);\n        });\n    });\n    describe('helpers', () => {\n        /** @test {combineTaskInstanceWithState} */\n        it('combineTaskInstanceWithState', () => {\n            expect(task.combineTaskInstanceWithStateLabel('task', 'state')).to.deep.equal({\n                taskInstance: 'task',\n                taskInstanceStateLabel: 'state',\n            });\n        });\n    });\n});\n",
    "static": true,
    "longname": "/home/topaxi/rxtask/tmp/test-build/test/reducers/task.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 291,
    "kind": "test",
    "name": "describe66",
    "testId": 66,
    "memberof": "test/reducers/task.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/reducers/task.test.js~describe66",
    "access": null,
    "description": "reducers/Task",
    "lineNumber": 36
  },
  {
    "__docId__": 292,
    "kind": "test",
    "name": "describe67",
    "testId": 67,
    "memberof": "test/reducers/task.test.js~describe66",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducers/task.test.js~describe66.describe67",
    "access": null,
    "description": "Static states",
    "lineNumber": 37
  },
  {
    "__docId__": 293,
    "kind": "test",
    "name": "it68",
    "testId": 68,
    "memberof": "test/reducers/task.test.js~describe66.describe67",
    "testDepth": 2,
    "static": true,
    "longname": "test/reducers/task.test.js~describe66.describe67.it68",
    "access": null,
    "description": "defines an initial state",
    "lineNumber": 39,
    "testTargets": [
      "INITIAL_STATE"
    ]
  },
  {
    "__docId__": 294,
    "kind": "test",
    "name": "describe69",
    "testId": 69,
    "memberof": "test/reducers/task.test.js~describe66",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducers/task.test.js~describe66.describe69",
    "access": null,
    "description": "Reducer",
    "lineNumber": 58,
    "testTargets": [
      "reducer"
    ]
  },
  {
    "__docId__": 295,
    "kind": "test",
    "name": "describe70",
    "testId": 70,
    "memberof": "test/reducers/task.test.js~describe66.describe69",
    "testDepth": 2,
    "static": true,
    "longname": "test/reducers/task.test.js~describe66.describe69.describe70",
    "access": null,
    "description": "Initial state",
    "lineNumber": 59
  },
  {
    "__docId__": 296,
    "kind": "test",
    "name": "it71",
    "testId": 71,
    "memberof": "test/reducers/task.test.js~describe66.describe69.describe70",
    "testDepth": 3,
    "static": true,
    "longname": "test/reducers/task.test.js~describe66.describe69.describe70.it71",
    "access": null,
    "description": "equals INITIAL_STATE",
    "lineNumber": 60
  },
  {
    "__docId__": 297,
    "kind": "test",
    "name": "describe72",
    "testId": 72,
    "memberof": "test/reducers/task.test.js~describe66.describe69",
    "testDepth": 2,
    "static": true,
    "longname": "test/reducers/task.test.js~describe66.describe69.describe72",
    "access": null,
    "description": "TaskInstance state changes",
    "lineNumber": 64
  },
  {
    "__docId__": 298,
    "kind": "test",
    "name": "describe73",
    "testId": 73,
    "memberof": "test/reducers/task.test.js~describe66.describe69.describe72",
    "testDepth": 3,
    "static": true,
    "longname": "test/reducers/task.test.js~describe66.describe69.describe72.describe73",
    "access": null,
    "description": "PENDING",
    "lineNumber": 69
  },
  {
    "__docId__": 299,
    "kind": "test",
    "name": "it74",
    "testId": 74,
    "memberof": "test/reducers/task.test.js~describe66.describe69.describe72.describe73",
    "testDepth": 4,
    "static": true,
    "longname": "test/reducers/task.test.js~describe66.describe69.describe72.describe73.it74",
    "access": null,
    "description": "counts performed and tracks pending instances",
    "lineNumber": 70
  },
  {
    "__docId__": 300,
    "kind": "test",
    "name": "describe75",
    "testId": 75,
    "memberof": "test/reducers/task.test.js~describe66.describe69.describe72",
    "testDepth": 3,
    "static": true,
    "longname": "test/reducers/task.test.js~describe66.describe69.describe72.describe75",
    "access": null,
    "description": "RUNNING",
    "lineNumber": 85
  },
  {
    "__docId__": 301,
    "kind": "test",
    "name": "it76",
    "testId": 76,
    "memberof": "test/reducers/task.test.js~describe66.describe69.describe72.describe75",
    "testDepth": 4,
    "static": true,
    "longname": "test/reducers/task.test.js~describe66.describe69.describe72.describe75.it76",
    "access": null,
    "description": "removes from pending and tracks running",
    "lineNumber": 95
  },
  {
    "__docId__": 302,
    "kind": "test",
    "name": "describe77",
    "testId": 77,
    "memberof": "test/reducers/task.test.js~describe66.describe69.describe72",
    "testDepth": 3,
    "static": true,
    "longname": "test/reducers/task.test.js~describe66.describe69.describe72.describe77",
    "access": null,
    "description": "CANCELLED",
    "lineNumber": 110
  },
  {
    "__docId__": 303,
    "kind": "test",
    "name": "it78",
    "testId": 78,
    "memberof": "test/reducers/task.test.js~describe66.describe69.describe72.describe77",
    "testDepth": 4,
    "static": true,
    "longname": "test/reducers/task.test.js~describe66.describe69.describe72.describe77.it78",
    "access": null,
    "description": "removes from pending and running and tracks cancelled",
    "lineNumber": 121
  },
  {
    "__docId__": 304,
    "kind": "test",
    "name": "describe79",
    "testId": 79,
    "memberof": "test/reducers/task.test.js~describe66.describe69.describe72",
    "testDepth": 3,
    "static": true,
    "longname": "test/reducers/task.test.js~describe66.describe69.describe72.describe79",
    "access": null,
    "description": "ERROR",
    "lineNumber": 137
  },
  {
    "__docId__": 305,
    "kind": "test",
    "name": "it80",
    "testId": 80,
    "memberof": "test/reducers/task.test.js~describe66.describe69.describe72.describe79",
    "testDepth": 4,
    "static": true,
    "longname": "test/reducers/task.test.js~describe66.describe69.describe72.describe79.it80",
    "access": null,
    "description": "removes from pending and running and tracks errored",
    "lineNumber": 149
  },
  {
    "__docId__": 306,
    "kind": "test",
    "name": "describe81",
    "testId": 81,
    "memberof": "test/reducers/task.test.js~describe66.describe69.describe72",
    "testDepth": 3,
    "static": true,
    "longname": "test/reducers/task.test.js~describe66.describe69.describe72.describe81",
    "access": null,
    "description": "COMPLETE",
    "lineNumber": 169
  },
  {
    "__docId__": 307,
    "kind": "test",
    "name": "it82",
    "testId": 82,
    "memberof": "test/reducers/task.test.js~describe66.describe69.describe72.describe81",
    "testDepth": 4,
    "static": true,
    "longname": "test/reducers/task.test.js~describe66.describe69.describe72.describe81.it82",
    "access": null,
    "description": "removes from pending and running and tracks completed",
    "lineNumber": 181
  },
  {
    "__docId__": 308,
    "kind": "test",
    "name": "describe83",
    "testId": 83,
    "memberof": "test/reducers/task.test.js~describe66.describe69.describe72",
    "testDepth": 3,
    "static": true,
    "longname": "test/reducers/task.test.js~describe66.describe69.describe72.describe83",
    "access": null,
    "description": "Unkown TaskInstance state",
    "lineNumber": 201
  },
  {
    "__docId__": 309,
    "kind": "test",
    "name": "describe84",
    "testId": 84,
    "memberof": "test/reducers/task.test.js~describe66",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducers/task.test.js~describe66.describe84",
    "access": null,
    "description": "Selectors",
    "lineNumber": 207
  },
  {
    "__docId__": 310,
    "kind": "test",
    "name": "it85",
    "testId": 85,
    "memberof": "test/reducers/task.test.js~describe66.describe84",
    "testDepth": 2,
    "static": true,
    "longname": "test/reducers/task.test.js~describe66.describe84.it85",
    "access": null,
    "description": "selectPerformed",
    "lineNumber": 235,
    "testTargets": [
      "selectPerformed"
    ]
  },
  {
    "__docId__": 311,
    "kind": "test",
    "name": "it86",
    "testId": 86,
    "memberof": "test/reducers/task.test.js~describe66.describe84",
    "testDepth": 2,
    "static": true,
    "longname": "test/reducers/task.test.js~describe66.describe84.it86",
    "access": null,
    "description": "selectPending",
    "lineNumber": 239,
    "testTargets": [
      "selectPending"
    ]
  },
  {
    "__docId__": 312,
    "kind": "test",
    "name": "it87",
    "testId": 87,
    "memberof": "test/reducers/task.test.js~describe66.describe84",
    "testDepth": 2,
    "static": true,
    "longname": "test/reducers/task.test.js~describe66.describe84.it87",
    "access": null,
    "description": "selectRunning",
    "lineNumber": 243,
    "testTargets": [
      "selectRunning"
    ]
  },
  {
    "__docId__": 313,
    "kind": "test",
    "name": "it88",
    "testId": 88,
    "memberof": "test/reducers/task.test.js~describe66.describe84",
    "testDepth": 2,
    "static": true,
    "longname": "test/reducers/task.test.js~describe66.describe84.it88",
    "access": null,
    "description": "selectSuccessful",
    "lineNumber": 247,
    "testTargets": [
      "selectSuccessful"
    ]
  },
  {
    "__docId__": 314,
    "kind": "test",
    "name": "it89",
    "testId": 89,
    "memberof": "test/reducers/task.test.js~describe66.describe84",
    "testDepth": 2,
    "static": true,
    "longname": "test/reducers/task.test.js~describe66.describe84.it89",
    "access": null,
    "description": "selectCancelled",
    "lineNumber": 251,
    "testTargets": [
      "selectCancelled"
    ]
  },
  {
    "__docId__": 315,
    "kind": "test",
    "name": "it90",
    "testId": 90,
    "memberof": "test/reducers/task.test.js~describe66.describe84",
    "testDepth": 2,
    "static": true,
    "longname": "test/reducers/task.test.js~describe66.describe84.it90",
    "access": null,
    "description": "selectErrored",
    "lineNumber": 255,
    "testTargets": [
      "selectErrored"
    ]
  },
  {
    "__docId__": 316,
    "kind": "test",
    "name": "it91",
    "testId": 91,
    "memberof": "test/reducers/task.test.js~describe66.describe84",
    "testDepth": 2,
    "static": true,
    "longname": "test/reducers/task.test.js~describe66.describe84.it91",
    "access": null,
    "description": "selectCompleted",
    "lineNumber": 259,
    "testTargets": [
      "selectCompleted"
    ]
  },
  {
    "__docId__": 317,
    "kind": "test",
    "name": "it92",
    "testId": 92,
    "memberof": "test/reducers/task.test.js~describe66.describe84",
    "testDepth": 2,
    "static": true,
    "longname": "test/reducers/task.test.js~describe66.describe84.it92",
    "access": null,
    "description": "selectLast",
    "lineNumber": 263,
    "testTargets": [
      "selectLast"
    ]
  },
  {
    "__docId__": 318,
    "kind": "test",
    "name": "it93",
    "testId": 93,
    "memberof": "test/reducers/task.test.js~describe66.describe84",
    "testDepth": 2,
    "static": true,
    "longname": "test/reducers/task.test.js~describe66.describe84.it93",
    "access": null,
    "description": "selectLastRunning",
    "lineNumber": 267,
    "testTargets": [
      "selectLastRunning"
    ]
  },
  {
    "__docId__": 319,
    "kind": "test",
    "name": "it94",
    "testId": 94,
    "memberof": "test/reducers/task.test.js~describe66.describe84",
    "testDepth": 2,
    "static": true,
    "longname": "test/reducers/task.test.js~describe66.describe84.it94",
    "access": null,
    "description": "selectLastSuccesful",
    "lineNumber": 271,
    "testTargets": [
      "selectLastSuccessful"
    ]
  },
  {
    "__docId__": 320,
    "kind": "test",
    "name": "it95",
    "testId": 95,
    "memberof": "test/reducers/task.test.js~describe66.describe84",
    "testDepth": 2,
    "static": true,
    "longname": "test/reducers/task.test.js~describe66.describe84.it95",
    "access": null,
    "description": "selectLastCancelled",
    "lineNumber": 275,
    "testTargets": [
      "selectLastCancelled"
    ]
  },
  {
    "__docId__": 321,
    "kind": "test",
    "name": "it96",
    "testId": 96,
    "memberof": "test/reducers/task.test.js~describe66.describe84",
    "testDepth": 2,
    "static": true,
    "longname": "test/reducers/task.test.js~describe66.describe84.it96",
    "access": null,
    "description": "selectLastErrored",
    "lineNumber": 279,
    "testTargets": [
      "selectLastErrored"
    ]
  },
  {
    "__docId__": 322,
    "kind": "test",
    "name": "it97",
    "testId": 97,
    "memberof": "test/reducers/task.test.js~describe66.describe84",
    "testDepth": 2,
    "static": true,
    "longname": "test/reducers/task.test.js~describe66.describe84.it97",
    "access": null,
    "description": "selectLastCompleted",
    "lineNumber": 283,
    "testTargets": [
      "selectLastCompleted"
    ]
  },
  {
    "__docId__": 323,
    "kind": "test",
    "name": "describe98",
    "testId": 98,
    "memberof": "test/reducers/task.test.js~describe66",
    "testDepth": 1,
    "static": true,
    "longname": "test/reducers/task.test.js~describe66.describe98",
    "access": null,
    "description": "helpers",
    "lineNumber": 287
  },
  {
    "__docId__": 324,
    "kind": "test",
    "name": "it99",
    "testId": 99,
    "memberof": "test/reducers/task.test.js~describe66.describe98",
    "testDepth": 2,
    "static": true,
    "longname": "test/reducers/task.test.js~describe66.describe98.it99",
    "access": null,
    "description": "combineTaskInstanceWithState",
    "lineNumber": 289,
    "testTargets": [
      "combineTaskInstanceWithState"
    ]
  },
  {
    "__docId__": 325,
    "kind": "testFile",
    "name": "test/task-instance.test.js",
    "content": "import { of } from 'rxjs/observable/of';\nimport { _throw as throwError } from 'rxjs/observable/throw';\nimport { TaskInstance } from '../src/task-instance';\nimport { marbles } from 'rxjs-marbles';\nimport { expect } from 'chai';\nimport { ObjectUnsubscribedError } from 'rxjs/util/ObjectUnsubscribedError';\nimport { observable } from 'rxjs/symbol/observable';\nimport { delay } from 'rxjs/operators/delay';\nfunction o(t) {\n    return t;\n}\nconst stateLabels = [\n    \"pending\" /* PENDING */,\n    \"running\" /* RUNNING */,\n    \"cancelled\" /* CANCELLED */,\n    \"error\" /* ERROR */,\n    \"complete\" /* COMPLETE */,\n];\nfunction ucfirst(str) {\n    return `${str[0].toUpperCase()}${str.slice(1)}`;\n}\nfunction expectState(m, taskInstance, expected, values) {\n    m.expect(taskInstance.stateLabel$).toBeObservable(m.cold(expected, values));\n    stateLabels.forEach(sl => {\n        let stateLabelValues = Object.keys(values).reduce((slv, key) => Object.assign(slv, { [key]: sl === values[key] }), {});\n        m\n            .expect(taskInstance[`is${ucfirst(sl)}$`])\n            .toBeObservable(m.cold(expected, stateLabelValues));\n    });\n}\n/** @test {TaskInstance} */\ndescribe('TaskInstance', () => {\n    /** @test {TaskInstance#toString} */\n    it('casts to a string', () => {\n        expect(new TaskInstance(of(true))).to.match(/^TaskInstance#\\d+$/);\n    });\n    /** @test {TaskInstance#toJSON} */\n    it('deserializes to JSON', () => {\n        const json = new TaskInstance(of(true)).toJSON();\n        expect(json.type).to.equal('TaskInstance');\n        expect(json.id).to.be.a('number');\n    });\n    it('has an id', () => {\n        expect(new TaskInstance(of(true)).id).to.be.a('number');\n    });\n    it('wraps an observable', marbles(m => {\n        const observable = of(true);\n        const taskInstance = new TaskInstance(observable);\n        const expected = m.cold('(x|)', { x: true });\n        m.expect(o(taskInstance)).toBeObservable(expected);\n    }));\n    /** @test {TaskInstance#unsubscribe} */\n    describe('unsubscribe', () => {\n        it('closes the TaskInstance', () => {\n            const taskInstance = new TaskInstance(of(true));\n            taskInstance.unsubscribe();\n            expect(taskInstance.closed).to.be.true;\n            expect(() => taskInstance.subscribe()).to.throw(ObjectUnsubscribedError);\n        });\n    });\n    describe('Symbol.observable', () => {\n        it('implements observable interface', () => {\n            const taskInstance = new TaskInstance(of(true));\n            expect(taskInstance).to.equal(taskInstance[observable]());\n        });\n    });\n    /** @test {TaskInstance#stateLabel$} */\n    /** @test {TaskInstance#isPending$} */\n    /** @test {TaskInstance#isRunning$} */\n    /** @test {TaskInstance#isCancelled$} */\n    /** @test {TaskInstance#isError$} */\n    /** @test {TaskInstance#isComplete$} */\n    describe('stateLabel$', () => {\n        it('is pending after creation', marbles(m => {\n            expectState(m, new TaskInstance(of('somevalue')), 'a', {\n                a: \"pending\" /* PENDING */,\n            });\n        }));\n        it('is runs and completes after subscription', marbles(m => {\n            const taskInstance = new TaskInstance(of('somevalue').pipe(delay(m.time('----|'), m.scheduler)));\n            expectState(m, taskInstance, '(ab)(c|)', {\n                a: \"pending\" /* PENDING */,\n                b: \"running\" /* RUNNING */,\n                c: \"complete\" /* COMPLETE */,\n            });\n            m\n                .expect(o(taskInstance))\n                .toBeObservable(m.cold('----(a|)', { a: 'somevalue' }));\n        }));\n        it('cancels on unsubscribe', marbles(m => {\n            const taskInstance = new TaskInstance(of('somevalue').pipe(delay(m.time('----|'), m.scheduler)));\n            expectState(m, taskInstance, '(ab)c---', {\n                a: \"pending\" /* PENDING */,\n                b: \"running\" /* RUNNING */,\n                c: \"cancelled\" /* CANCELLED */,\n            });\n            m.expect(o(taskInstance), '----!').toBeObservable(m.cold('-----', {}));\n        }));\n        it('switches to error state on error', marbles(m => {\n            const taskInstance = new TaskInstance(throwError(new Error('Not good')));\n            expectState(m, taskInstance, '(abc|)', {\n                a: \"pending\" /* PENDING */,\n                b: \"running\" /* RUNNING */,\n                c: \"error\" /* ERROR */,\n            });\n            m\n                .expect(o(taskInstance))\n                .toBeObservable(m.cold('#', {}, new Error('Not good')));\n        }));\n    });\n});\n",
    "static": true,
    "longname": "/home/topaxi/rxtask/tmp/test-build/test/task-instance.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 326,
    "kind": "test",
    "name": "describe100",
    "testId": 100,
    "memberof": "test/task-instance.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/task-instance.test.js~describe100",
    "access": null,
    "description": "TaskInstance",
    "lineNumber": 32,
    "testTargets": [
      "TaskInstance"
    ]
  },
  {
    "__docId__": 327,
    "kind": "test",
    "name": "it101",
    "testId": 101,
    "memberof": "test/task-instance.test.js~describe100",
    "testDepth": 1,
    "static": true,
    "longname": "test/task-instance.test.js~describe100.it101",
    "access": null,
    "description": "casts to a string",
    "lineNumber": 34,
    "testTargets": [
      "TaskInstance#toString"
    ]
  },
  {
    "__docId__": 328,
    "kind": "test",
    "name": "it102",
    "testId": 102,
    "memberof": "test/task-instance.test.js~describe100",
    "testDepth": 1,
    "static": true,
    "longname": "test/task-instance.test.js~describe100.it102",
    "access": null,
    "description": "deserializes to JSON",
    "lineNumber": 38,
    "testTargets": [
      "TaskInstance#toJSON"
    ]
  },
  {
    "__docId__": 329,
    "kind": "test",
    "name": "it103",
    "testId": 103,
    "memberof": "test/task-instance.test.js~describe100",
    "testDepth": 1,
    "static": true,
    "longname": "test/task-instance.test.js~describe100.it103",
    "access": null,
    "description": "has an id",
    "lineNumber": 43
  },
  {
    "__docId__": 330,
    "kind": "test",
    "name": "it104",
    "testId": 104,
    "memberof": "test/task-instance.test.js~describe100",
    "testDepth": 1,
    "static": true,
    "longname": "test/task-instance.test.js~describe100.it104",
    "access": null,
    "description": "wraps an observable",
    "lineNumber": 46
  },
  {
    "__docId__": 331,
    "kind": "test",
    "name": "describe105",
    "testId": 105,
    "memberof": "test/task-instance.test.js~describe100",
    "testDepth": 1,
    "static": true,
    "longname": "test/task-instance.test.js~describe100.describe105",
    "access": null,
    "description": "unsubscribe",
    "lineNumber": 53,
    "testTargets": [
      "TaskInstance#unsubscribe"
    ]
  },
  {
    "__docId__": 332,
    "kind": "test",
    "name": "it106",
    "testId": 106,
    "memberof": "test/task-instance.test.js~describe100.describe105",
    "testDepth": 2,
    "static": true,
    "longname": "test/task-instance.test.js~describe100.describe105.it106",
    "access": null,
    "description": "closes the TaskInstance",
    "lineNumber": 54
  },
  {
    "__docId__": 333,
    "kind": "test",
    "name": "describe107",
    "testId": 107,
    "memberof": "test/task-instance.test.js~describe100",
    "testDepth": 1,
    "static": true,
    "longname": "test/task-instance.test.js~describe100.describe107",
    "access": null,
    "description": "Symbol.observable",
    "lineNumber": 61
  },
  {
    "__docId__": 334,
    "kind": "test",
    "name": "it108",
    "testId": 108,
    "memberof": "test/task-instance.test.js~describe100.describe107",
    "testDepth": 2,
    "static": true,
    "longname": "test/task-instance.test.js~describe100.describe107.it108",
    "access": null,
    "description": "implements observable interface",
    "lineNumber": 62
  },
  {
    "__docId__": 335,
    "kind": "test",
    "name": "describe109",
    "testId": 109,
    "memberof": "test/task-instance.test.js~describe100",
    "testDepth": 1,
    "static": true,
    "longname": "test/task-instance.test.js~describe100.describe109",
    "access": null,
    "description": "stateLabel$",
    "lineNumber": 73,
    "testTargets": [
      "TaskInstance#isComplete$"
    ]
  },
  {
    "__docId__": 336,
    "kind": "test",
    "name": "it110",
    "testId": 110,
    "memberof": "test/task-instance.test.js~describe100.describe109",
    "testDepth": 2,
    "static": true,
    "longname": "test/task-instance.test.js~describe100.describe109.it110",
    "access": null,
    "description": "is pending after creation",
    "lineNumber": 74
  },
  {
    "__docId__": 337,
    "kind": "test",
    "name": "it111",
    "testId": 111,
    "memberof": "test/task-instance.test.js~describe100.describe109",
    "testDepth": 2,
    "static": true,
    "longname": "test/task-instance.test.js~describe100.describe109.it111",
    "access": null,
    "description": "is runs and completes after subscription",
    "lineNumber": 79
  },
  {
    "__docId__": 338,
    "kind": "test",
    "name": "it112",
    "testId": 112,
    "memberof": "test/task-instance.test.js~describe100.describe109",
    "testDepth": 2,
    "static": true,
    "longname": "test/task-instance.test.js~describe100.describe109.it112",
    "access": null,
    "description": "cancels on unsubscribe",
    "lineNumber": 90
  },
  {
    "__docId__": 339,
    "kind": "test",
    "name": "it113",
    "testId": 113,
    "memberof": "test/task-instance.test.js~describe100.describe109",
    "testDepth": 2,
    "static": true,
    "longname": "test/task-instance.test.js~describe100.describe109.it113",
    "access": null,
    "description": "switches to error state on error",
    "lineNumber": 99
  },
  {
    "__docId__": 340,
    "kind": "testFile",
    "name": "test/task.test.js",
    "content": "import { of } from 'rxjs/observable/of';\nimport { Subject } from 'rxjs/Subject';\nimport { task, Task } from '../src/task';\nimport { TaskInstance } from '../src/task-instance';\nimport { notNull } from '../src/utils/filter';\nimport { expect } from 'chai';\nimport { stub } from 'sinon';\nimport { marbles } from 'rxjs-marbles';\nimport { ObjectUnsubscribedError } from 'rxjs/util/ObjectUnsubscribedError';\nimport { takeUntil, delay } from 'rxjs/operators';\nimport { INITIAL_STATE, selectPerformed, selectRunning, selectCancelled, selectSuccessful, selectErrored, selectCompleted, selectLast, selectLastRunning, selectLastSuccessful, selectLastCancelled, selectLastErrored, selectLastCompleted, selectPending, } from '../src/reducers/task';\nimport * as dict from './test-helpers/dict';\nfunction expectObservables(m, task, expectations) {\n    Object.keys(expectations).forEach(k => {\n        const { expected, values } = expectations[k];\n        m.expect(task[k]).toBeObservable(expected, values);\n    });\n}\nfunction incrementalStates(states) {\n    return dict.reduce(states, (acc, s, k, i, keys, states) => ((acc[k] = state(acc[keys[keys.indexOf(k) - 1]] || INITIAL_STATE, s)),\n        acc), {});\n}\nfunction stateExpectation(expected, values, exceptions = {}) {\n    return {\n        state$: exceptions.state$ || { expected, values },\n        pending$: exceptions.pending$ || {\n            expected,\n            values: dict.map(values, selectPending),\n        },\n        performed$: exceptions.performed$ || {\n            expected,\n            values: dict.map(values, selectPerformed),\n        },\n        running$: exceptions.running$ || {\n            expected,\n            values: dict.map(values, selectRunning),\n        },\n        cancelled$: exceptions.cancelled$ || {\n            expected,\n            values: dict.map(values, selectCancelled),\n        },\n        successful$: exceptions.successful$ || {\n            expected,\n            values: dict.map(values, selectSuccessful),\n        },\n        errored$: exceptions.errored$ || {\n            expected,\n            values: dict.map(values, selectErrored),\n        },\n        completed$: exceptions.completed$ || {\n            expected,\n            values: dict.map(values, selectCompleted),\n        },\n        last$: exceptions.last$ || {\n            expected,\n            values: dict.filter(dict.map(values, selectLast), notNull),\n        },\n        lastRunning$: exceptions.lastRunning$ || {\n            expected,\n            values: dict.filter(dict.map(values, selectLastRunning), notNull),\n        },\n        lastSuccessful$: exceptions.lastSuccessful$ || {\n            expected,\n            values: dict.filter(dict.map(values, selectLastSuccessful), notNull),\n        },\n        lastCancelled$: exceptions.lastCancelled$ || {\n            expected,\n            values: dict.filter(dict.map(values, selectLastCancelled), notNull),\n        },\n        lastErrored$: exceptions.lastErrored$ || {\n            expected,\n            values: dict.filter(dict.map(values, selectLastErrored), notNull),\n        },\n        lastCompleted$: exceptions.lastCompleted$ || {\n            expected,\n            values: dict.filter(dict.map(values, selectLastCompleted), notNull),\n        },\n    };\n}\nfunction state() {\n    if (arguments.length === 2) {\n        return Object.assign({}, arguments[0], arguments[1]);\n    }\n    return Object.assign({}, INITIAL_STATE, arguments[0]);\n}\n/** @test {Task} */\ndescribe('Task', () => {\n    let destroy$;\n    beforeEach(() => {\n        destroy$ = new Subject();\n    });\n    afterEach(() => {\n        destroy$.next();\n    });\n    it('has an id', () => {\n        expect(new Task(stub()).id).to.be.a('number');\n    });\n    /** @test {Task#toString} */\n    it('casts to a string', () => {\n        expect(new Task(stub())).to.match(/^Task#\\d+$/);\n    });\n    /** @test {Task#toJSON} */\n    it('deserializes to JSON', () => {\n        const json = new Task(stub()).toJSON();\n        expect(json.type).to.equal('Task');\n        expect(json.id).to.be.a('number');\n    });\n    /** @test {Task#perform} */\n    describe('perform', () => {\n        it('executes the given function and creates a TaskInstance', () => {\n            const fn = stub().returns(of(true));\n            const t = task(fn).subscribeUntil(destroy$);\n            const i = t.perform('task');\n            expect(i).to.be.instanceOf(TaskInstance);\n            expect(fn).to.be.calledWith('task');\n            t.perform('second task');\n            expect(fn).to.be.calledWith('second task');\n        });\n    });\n    /** @test {Task#unsubscribe} */\n    describe('unsubscribe', () => {\n        it('closes the Task', () => {\n            const fn = stub();\n            const t = task(fn).subscribeUntil(destroy$);\n            t.unsubscribe();\n            expect(t.closed).to.be.true;\n            expect(() => t.subscribe()).to.throw(ObjectUnsubscribedError);\n            expect(() => t.perform(null)).to.throw(ObjectUnsubscribedError);\n            expect(fn).to.not.be.called;\n        });\n    });\n    /** @test {Task#callable} */\n    describe('callable', () => {\n        it('creates a callable task object', () => {\n            const fn = stub().returns(of(true));\n            const t = task(fn)\n                .callable()\n                .subscribeUntil(destroy$);\n            const i = t('callable task');\n            expect(i).to.be.instanceOf(TaskInstance);\n            expect(fn).to.be.calledWith('callable task');\n        });\n    });\n    describe('default', () => {\n        /** @test {Task#state$} */\n        describe('state$', () => {\n            it('matches initial state without emitting null tasks', marbles(m => {\n                m.bind();\n                const t = task(() => of(true)).subscribeUntil(destroy$);\n                expectObservables(m, t, stateExpectation('a', { a: state() }, {\n                    last$: { expected: '-' },\n                    lastRunning$: { expected: '-' },\n                    lastSuccessful$: { expected: '-' },\n                    lastCancelled$: { expected: '-' },\n                    lastErrored$: { expected: '-' },\n                    lastCompleted$: { expected: '-' },\n                }));\n            }));\n            it('counts performed, successful and completed tasks', marbles(m => {\n                m.bind();\n                const t = task(() => of(true)).subscribeUntil(destroy$);\n                t.state$.pipe(takeUntil(destroy$)).subscribe();\n                const first = t.perform('task');\n                const last = t.perform('second task');\n                expectObservables(m, t, stateExpectation('a', {\n                    a: state({\n                        performed: 2,\n                        successful: 2,\n                        completed: 2,\n                        last,\n                        lastRunning: last,\n                        lastSuccessful: last,\n                        lastCompleted: last,\n                    }),\n                }, {\n                    lastCancelled$: { expected: '-' },\n                    lastErrored$: { expected: '-' },\n                }));\n            }));\n        });\n    });\n    /** @test {Task#concurrency} */\n    describe('concurrency', () => {\n        /** @test {Task#state$} */\n        describe('state$', () => {\n            it('counts performed, successful and completed tasks', marbles(m => {\n                m.bind();\n                const t = task(() => of(true).pipe(delay(m.time('--|'))))\n                    .concurrency(2)\n                    .subscribeUntil(destroy$);\n                t.state$.pipe(takeUntil(destroy$)).subscribe();\n                const one = t.perform('task 1');\n                const two = t.perform('task 2');\n                const three = t.perform('task 3');\n                const four = t.perform('task 4');\n                const five = t.perform('task 5');\n                expectObservables(m, t, stateExpectation('a-b-c-d', incrementalStates({\n                    a: {\n                        performed: 5,\n                        pending: [three, four, five],\n                        running: [one, two],\n                        successful: 0,\n                        completed: 0,\n                        last: five,\n                        lastRunning: two,\n                    },\n                    b: {\n                        pending: [five],\n                        running: [three, four],\n                        successful: 2,\n                        completed: 2,\n                        lastRunning: four,\n                        lastSuccessful: two,\n                        lastCompleted: two,\n                    },\n                    c: {\n                        pending: [],\n                        running: [five],\n                        successful: 4,\n                        completed: 4,\n                        lastRunning: five,\n                        lastSuccessful: four,\n                        lastCompleted: four,\n                    },\n                    d: {\n                        running: [],\n                        successful: 5,\n                        completed: 5,\n                        lastRunning: five,\n                        lastSuccessful: five,\n                        lastCompleted: five,\n                    },\n                }), {\n                    lastSuccessful$: {\n                        expected: '--b-d-e',\n                        values: { a: one, b: two, c: three, d: four, e: five },\n                    },\n                    lastCompleted$: {\n                        expected: '--b-d-e',\n                        values: { a: one, b: two, c: three, d: four, e: five },\n                    },\n                    lastCancelled$: { expected: '-' },\n                    lastErrored$: { expected: '-' },\n                }));\n            }));\n        });\n    });\n    /** @test {Task#concat} */\n    describe('concat', () => {\n        /** @test {Task#state$} */\n        describe('state$', () => {\n            it('counts performed, successful and completed tasks', marbles(m => {\n                m.bind();\n                const t = task(() => of(true).pipe(delay(m.time('--|'))))\n                    .concat()\n                    .subscribeUntil(destroy$);\n                t.state$.pipe(takeUntil(destroy$)).subscribe();\n                const first = t.perform('task');\n                const last = t.perform('second task');\n                expectObservables(m, t, stateExpectation('a-b-c', incrementalStates({\n                    a: {\n                        performed: 2,\n                        pending: [last],\n                        running: [first],\n                        last,\n                        lastRunning: first,\n                    },\n                    b: {\n                        pending: [],\n                        running: [last],\n                        successful: 1,\n                        completed: 1,\n                        lastRunning: last,\n                        lastSuccessful: first,\n                        lastCompleted: first,\n                    },\n                    c: {\n                        running: [],\n                        successful: 2,\n                        completed: 2,\n                        lastSuccessful: last,\n                        lastCompleted: last,\n                    },\n                }), {\n                    lastSuccessful$: {\n                        expected: '--b-c',\n                        values: { b: first, c: last },\n                    },\n                    lastCompleted$: {\n                        expected: '--b-c',\n                        values: { b: first, c: last },\n                    },\n                    lastCancelled$: { expected: '-' },\n                    lastErrored$: { expected: '-' },\n                }));\n            }));\n        });\n    });\n    /** @test {Task#switch} */\n    describe('switch', () => {\n        /** @test {Task#state$} */\n        describe('state$', () => {\n            it('counts performed, successful and completed tasks', marbles(m => {\n                m.bind();\n                const t = task(() => of(true).pipe(delay(m.time('--|'))))\n                    .switch()\n                    .subscribeUntil(destroy$);\n                t.state$.pipe(takeUntil(destroy$)).subscribe();\n                const first = t.perform('task');\n                const last = t.perform('second task');\n                expectObservables(m, t, stateExpectation('a-b', incrementalStates({\n                    a: {\n                        performed: 2,\n                        pending: [],\n                        running: [last],\n                        cancelled: 1,\n                        last,\n                        lastRunning: last,\n                        lastCancelled: first,\n                    },\n                    b: {\n                        running: [],\n                        successful: 1,\n                        completed: 1,\n                        lastSuccessful: last,\n                        lastCompleted: last,\n                    },\n                }), {\n                    lastSuccessful$: {\n                        expected: '--b',\n                        values: { b: last },\n                    },\n                    lastCompleted$: {\n                        expected: '--b',\n                        values: { b: last },\n                    },\n                    lastCancelled$: { expected: 'a-a', values: { a: first } },\n                    lastErrored$: { expected: '-' },\n                }));\n            }));\n        });\n    });\n    /** @test {Task#drop} */\n    describe('drop', () => {\n        /** @test {Task#state$} */\n        describe('state$', () => {\n            it.skip('counts performed, successful and completed tasks', marbles(m => {\n                m.bind();\n                const t = task(() => of(true).pipe(delay(m.time('--|'))))\n                    .drop()\n                    .subscribeUntil(destroy$);\n                t.state$.pipe(takeUntil(destroy$)).subscribe();\n                const first = t.perform('task');\n                const last = t.perform('second task');\n                expectObservables(m, t, stateExpectation('a-b', incrementalStates({\n                    a: {\n                        performed: 2,\n                        pending: [],\n                        running: [first],\n                        cancelled: 1,\n                        last,\n                        lastRunning: first,\n                        lastCancelled: last,\n                    },\n                    b: {\n                        running: [],\n                        successful: 1,\n                        completed: 1,\n                        lastSuccessful: first,\n                        lastCompleted: first,\n                    },\n                }), {\n                    lastSuccessful$: {\n                        expected: '--b',\n                        values: { b: first },\n                    },\n                    lastCompleted$: {\n                        expected: '--b',\n                        values: { b: first },\n                    },\n                    lastCancelled$: { expected: 'a-a', values: { a: last } },\n                    lastErrored$: { expected: '-' },\n                }));\n            }));\n        });\n    });\n});\n",
    "static": true,
    "longname": "/home/topaxi/rxtask/tmp/test-build/test/task.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 341,
    "kind": "test",
    "name": "describe114",
    "testId": 114,
    "memberof": "test/task.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/task.test.js~describe114",
    "access": null,
    "description": "Task",
    "lineNumber": 87,
    "testTargets": [
      "Task"
    ]
  },
  {
    "__docId__": 342,
    "kind": "test",
    "name": "it115",
    "testId": 115,
    "memberof": "test/task.test.js~describe114",
    "testDepth": 1,
    "static": true,
    "longname": "test/task.test.js~describe114.it115",
    "access": null,
    "description": "has an id",
    "lineNumber": 95
  },
  {
    "__docId__": 343,
    "kind": "test",
    "name": "it116",
    "testId": 116,
    "memberof": "test/task.test.js~describe114",
    "testDepth": 1,
    "static": true,
    "longname": "test/task.test.js~describe114.it116",
    "access": null,
    "description": "casts to a string",
    "lineNumber": 99,
    "testTargets": [
      "Task#toString"
    ]
  },
  {
    "__docId__": 344,
    "kind": "test",
    "name": "it117",
    "testId": 117,
    "memberof": "test/task.test.js~describe114",
    "testDepth": 1,
    "static": true,
    "longname": "test/task.test.js~describe114.it117",
    "access": null,
    "description": "deserializes to JSON",
    "lineNumber": 103,
    "testTargets": [
      "Task#toJSON"
    ]
  },
  {
    "__docId__": 345,
    "kind": "test",
    "name": "describe118",
    "testId": 118,
    "memberof": "test/task.test.js~describe114",
    "testDepth": 1,
    "static": true,
    "longname": "test/task.test.js~describe114.describe118",
    "access": null,
    "description": "perform",
    "lineNumber": 109,
    "testTargets": [
      "Task#perform"
    ]
  },
  {
    "__docId__": 346,
    "kind": "test",
    "name": "it119",
    "testId": 119,
    "memberof": "test/task.test.js~describe114.describe118",
    "testDepth": 2,
    "static": true,
    "longname": "test/task.test.js~describe114.describe118.it119",
    "access": null,
    "description": "executes the given function and creates a TaskInstance",
    "lineNumber": 110
  },
  {
    "__docId__": 347,
    "kind": "test",
    "name": "describe120",
    "testId": 120,
    "memberof": "test/task.test.js~describe114",
    "testDepth": 1,
    "static": true,
    "longname": "test/task.test.js~describe114.describe120",
    "access": null,
    "description": "unsubscribe",
    "lineNumber": 121,
    "testTargets": [
      "Task#unsubscribe"
    ]
  },
  {
    "__docId__": 348,
    "kind": "test",
    "name": "it121",
    "testId": 121,
    "memberof": "test/task.test.js~describe114.describe120",
    "testDepth": 2,
    "static": true,
    "longname": "test/task.test.js~describe114.describe120.it121",
    "access": null,
    "description": "closes the Task",
    "lineNumber": 122
  },
  {
    "__docId__": 349,
    "kind": "test",
    "name": "describe122",
    "testId": 122,
    "memberof": "test/task.test.js~describe114",
    "testDepth": 1,
    "static": true,
    "longname": "test/task.test.js~describe114.describe122",
    "access": null,
    "description": "callable",
    "lineNumber": 133,
    "testTargets": [
      "Task#callable"
    ]
  },
  {
    "__docId__": 350,
    "kind": "test",
    "name": "it123",
    "testId": 123,
    "memberof": "test/task.test.js~describe114.describe122",
    "testDepth": 2,
    "static": true,
    "longname": "test/task.test.js~describe114.describe122.it123",
    "access": null,
    "description": "creates a callable task object",
    "lineNumber": 134
  },
  {
    "__docId__": 351,
    "kind": "test",
    "name": "describe124",
    "testId": 124,
    "memberof": "test/task.test.js~describe114",
    "testDepth": 1,
    "static": true,
    "longname": "test/task.test.js~describe114.describe124",
    "access": null,
    "description": "default",
    "lineNumber": 144
  },
  {
    "__docId__": 352,
    "kind": "test",
    "name": "describe125",
    "testId": 125,
    "memberof": "test/task.test.js~describe114.describe124",
    "testDepth": 2,
    "static": true,
    "longname": "test/task.test.js~describe114.describe124.describe125",
    "access": null,
    "description": "state$",
    "lineNumber": 146,
    "testTargets": [
      "Task#state$"
    ]
  },
  {
    "__docId__": 353,
    "kind": "test",
    "name": "it126",
    "testId": 126,
    "memberof": "test/task.test.js~describe114.describe124.describe125",
    "testDepth": 3,
    "static": true,
    "longname": "test/task.test.js~describe114.describe124.describe125.it126",
    "access": null,
    "description": "matches initial state without emitting null tasks",
    "lineNumber": 147
  },
  {
    "__docId__": 354,
    "kind": "test",
    "name": "it127",
    "testId": 127,
    "memberof": "test/task.test.js~describe114.describe124.describe125",
    "testDepth": 3,
    "static": true,
    "longname": "test/task.test.js~describe114.describe124.describe125.it127",
    "access": null,
    "description": "counts performed, successful and completed tasks",
    "lineNumber": 159
  },
  {
    "__docId__": 355,
    "kind": "test",
    "name": "describe128",
    "testId": 128,
    "memberof": "test/task.test.js~describe114",
    "testDepth": 1,
    "static": true,
    "longname": "test/task.test.js~describe114.describe128",
    "access": null,
    "description": "concurrency",
    "lineNumber": 183,
    "testTargets": [
      "Task#concurrency"
    ]
  },
  {
    "__docId__": 356,
    "kind": "test",
    "name": "describe129",
    "testId": 129,
    "memberof": "test/task.test.js~describe114.describe128",
    "testDepth": 2,
    "static": true,
    "longname": "test/task.test.js~describe114.describe128.describe129",
    "access": null,
    "description": "state$",
    "lineNumber": 185,
    "testTargets": [
      "Task#state$"
    ]
  },
  {
    "__docId__": 357,
    "kind": "test",
    "name": "it130",
    "testId": 130,
    "memberof": "test/task.test.js~describe114.describe128.describe129",
    "testDepth": 3,
    "static": true,
    "longname": "test/task.test.js~describe114.describe128.describe129.it130",
    "access": null,
    "description": "counts performed, successful and completed tasks",
    "lineNumber": 186
  },
  {
    "__docId__": 358,
    "kind": "test",
    "name": "describe131",
    "testId": 131,
    "memberof": "test/task.test.js~describe114",
    "testDepth": 1,
    "static": true,
    "longname": "test/task.test.js~describe114.describe131",
    "access": null,
    "description": "concat",
    "lineNumber": 249,
    "testTargets": [
      "Task#concat"
    ]
  },
  {
    "__docId__": 359,
    "kind": "test",
    "name": "describe132",
    "testId": 132,
    "memberof": "test/task.test.js~describe114.describe131",
    "testDepth": 2,
    "static": true,
    "longname": "test/task.test.js~describe114.describe131.describe132",
    "access": null,
    "description": "state$",
    "lineNumber": 251,
    "testTargets": [
      "Task#state$"
    ]
  },
  {
    "__docId__": 360,
    "kind": "test",
    "name": "it133",
    "testId": 133,
    "memberof": "test/task.test.js~describe114.describe131.describe132",
    "testDepth": 3,
    "static": true,
    "longname": "test/task.test.js~describe114.describe131.describe132.it133",
    "access": null,
    "description": "counts performed, successful and completed tasks",
    "lineNumber": 252
  },
  {
    "__docId__": 361,
    "kind": "test",
    "name": "describe134",
    "testId": 134,
    "memberof": "test/task.test.js~describe114",
    "testDepth": 1,
    "static": true,
    "longname": "test/task.test.js~describe114.describe134",
    "access": null,
    "description": "switch",
    "lineNumber": 300,
    "testTargets": [
      "Task#switch"
    ]
  },
  {
    "__docId__": 362,
    "kind": "test",
    "name": "describe135",
    "testId": 135,
    "memberof": "test/task.test.js~describe114.describe134",
    "testDepth": 2,
    "static": true,
    "longname": "test/task.test.js~describe114.describe134.describe135",
    "access": null,
    "description": "state$",
    "lineNumber": 302,
    "testTargets": [
      "Task#state$"
    ]
  },
  {
    "__docId__": 363,
    "kind": "test",
    "name": "it136",
    "testId": 136,
    "memberof": "test/task.test.js~describe114.describe134.describe135",
    "testDepth": 3,
    "static": true,
    "longname": "test/task.test.js~describe114.describe134.describe135.it136",
    "access": null,
    "description": "counts performed, successful and completed tasks",
    "lineNumber": 303
  },
  {
    "__docId__": 364,
    "kind": "test",
    "name": "describe137",
    "testId": 137,
    "memberof": "test/task.test.js~describe114",
    "testDepth": 1,
    "static": true,
    "longname": "test/task.test.js~describe114.describe137",
    "access": null,
    "description": "drop",
    "lineNumber": 344,
    "testTargets": [
      "Task#drop"
    ]
  },
  {
    "__docId__": 365,
    "kind": "test",
    "name": "describe138",
    "testId": 138,
    "memberof": "test/task.test.js~describe114.describe137",
    "testDepth": 2,
    "static": true,
    "longname": "test/task.test.js~describe114.describe137.describe138",
    "access": null,
    "description": "state$",
    "lineNumber": 346,
    "testTargets": [
      "Task#state$"
    ]
  },
  {
    "__docId__": 366,
    "kind": "testFile",
    "name": "test/utils/assert-never.test.js",
    "content": "import { assertNever } from '../../src/utils/assert-never';\nimport { expect } from 'chai';\n/** @test {assertNever} */\ndescribe('utils/assert-never', () => {\n    it('throws with message', () => {\n        expect(() => assertNever('VALUE')).to.throw(TypeError, 'Unkown value VALUE');\n    });\n});\n",
    "static": true,
    "longname": "/home/topaxi/rxtask/tmp/test-build/test/utils/assert-never.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 367,
    "kind": "test",
    "name": "describe139",
    "testId": 139,
    "memberof": "test/utils/assert-never.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/utils/assert-never.test.js~describe139",
    "access": null,
    "description": "utils/assert-never",
    "lineNumber": 4,
    "testTargets": [
      "assertNever"
    ]
  },
  {
    "__docId__": 368,
    "kind": "test",
    "name": "it140",
    "testId": 140,
    "memberof": "test/utils/assert-never.test.js~describe139",
    "testDepth": 1,
    "static": true,
    "longname": "test/utils/assert-never.test.js~describe139.it140",
    "access": null,
    "description": "throws with message",
    "lineNumber": 5
  },
  {
    "__docId__": 369,
    "kind": "testFile",
    "name": "test/utils/create-callable-object.test.js",
    "content": "import { createCallableObject } from '../../src/utils/create-callable-object';\nimport { expect } from 'chai';\nimport { spy } from 'sinon';\n/** @test {createCallableObject} */\ndescribe('utils/create-callable-object', () => {\n    it('returns a callable object', () => {\n        let fn = () => 'myfn';\n        let obj = createCallableObject({}, fn);\n        expect(obj()).to.equal('myfn');\n    });\n    it('returns an almost indistinguishable object', () => {\n        let fn = () => 'myfn';\n        let original = { foo: 'foo', bar: [] };\n        let obj = createCallableObject(original, fn);\n        expect(obj.foo).to.equal(original.foo);\n        expect(obj.bar).to.equal(original.bar);\n    });\n    it('passes through methods with correct this', () => {\n        let fn = () => 'myfn';\n        let original = {\n            foo() {\n                return this.bar();\n            },\n            bar() {\n                return this;\n            },\n        };\n        let obj = createCallableObject(original, fn);\n        expect(obj.foo()).to.equal(obj);\n    });\n    it('passes through function methods', () => {\n        let fn = spy(function () {\n            return this;\n        });\n        let original = { bar: 'bar' };\n        let obj = createCallableObject(original, fn);\n        expect(obj()).to.equal(obj);\n        expect(fn).to.have.been.called;\n        expect(obj.call(Object, 'a', 'b')).to.equal(Object);\n        expect(fn).to.have.been.calledWith('a', 'b');\n        expect(obj.call(Object, 'a', 'b')).to.equal(Object);\n        expect(fn).to.have.been.calledWith('a', 'b');\n        expect(obj.apply(Object, ['a', 'b'])).to.equal(Object);\n        expect(fn).to.have.been.calledWith('a', 'b');\n        expect(obj.bind(Object, 'a', 'b')('c')).to.equal(Object);\n        expect(fn).to.have.been.calledWith('a', 'b', 'c');\n        // Bound callable loses its properties and reverts\n        // to being a plain old function.\n        expect(obj.bind(Object).bar).to.be.undefined;\n    });\n    it('retains its own this as a method on an object', () => {\n        let fn = function () {\n            return this;\n        };\n        let original = { bar: 'bar' };\n        let obj = { method: createCallableObject(original, fn) };\n        expect(obj.method()).to.not.equal(obj);\n        expect(obj.method()).to.equal(obj.method);\n    });\n    it('works with instanceof', () => {\n        let fn = () => 'myfn';\n        class Foo {\n            constructor() {\n                this.myproperty = 'mypropertyValue';\n                this.myarrayproperty = ['myarrayvalue'];\n            }\n            foo() {\n                return this.bar();\n            }\n            bar() {\n                return this;\n            }\n            getArrayValue() {\n                return this.myarrayproperty[0];\n            }\n        }\n        let original = new Foo();\n        let obj = createCallableObject(original, fn);\n        expect(obj).to.be.instanceof(Foo);\n        expect(obj.foo()).to.equal(obj);\n        expect(obj.getArrayValue()).to.equal('myarrayvalue');\n    });\n    it('returns undefined for unknown properties', () => {\n        let fn = () => 'myfn';\n        let original = { foo: 'foo', bar: [] };\n        let obj = createCallableObject(original, fn);\n        expect(obj.baz).to.be.undefined;\n    });\n});\n",
    "static": true,
    "longname": "/home/topaxi/rxtask/tmp/test-build/test/utils/create-callable-object.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 370,
    "kind": "test",
    "name": "describe141",
    "testId": 141,
    "memberof": "test/utils/create-callable-object.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/utils/create-callable-object.test.js~describe141",
    "access": null,
    "description": "utils/create-callable-object",
    "lineNumber": 5,
    "testTargets": [
      "createCallableObject"
    ]
  },
  {
    "__docId__": 371,
    "kind": "test",
    "name": "it142",
    "testId": 142,
    "memberof": "test/utils/create-callable-object.test.js~describe141",
    "testDepth": 1,
    "static": true,
    "longname": "test/utils/create-callable-object.test.js~describe141.it142",
    "access": null,
    "description": "returns a callable object",
    "lineNumber": 6
  },
  {
    "__docId__": 372,
    "kind": "test",
    "name": "it143",
    "testId": 143,
    "memberof": "test/utils/create-callable-object.test.js~describe141",
    "testDepth": 1,
    "static": true,
    "longname": "test/utils/create-callable-object.test.js~describe141.it143",
    "access": null,
    "description": "returns an almost indistinguishable object",
    "lineNumber": 11
  },
  {
    "__docId__": 373,
    "kind": "test",
    "name": "it144",
    "testId": 144,
    "memberof": "test/utils/create-callable-object.test.js~describe141",
    "testDepth": 1,
    "static": true,
    "longname": "test/utils/create-callable-object.test.js~describe141.it144",
    "access": null,
    "description": "passes through methods with correct this",
    "lineNumber": 18
  },
  {
    "__docId__": 374,
    "kind": "test",
    "name": "it145",
    "testId": 145,
    "memberof": "test/utils/create-callable-object.test.js~describe141",
    "testDepth": 1,
    "static": true,
    "longname": "test/utils/create-callable-object.test.js~describe141.it145",
    "access": null,
    "description": "passes through function methods",
    "lineNumber": 31
  },
  {
    "__docId__": 375,
    "kind": "test",
    "name": "it146",
    "testId": 146,
    "memberof": "test/utils/create-callable-object.test.js~describe141",
    "testDepth": 1,
    "static": true,
    "longname": "test/utils/create-callable-object.test.js~describe141.it146",
    "access": null,
    "description": "retains its own this as a method on an object",
    "lineNumber": 51
  },
  {
    "__docId__": 376,
    "kind": "test",
    "name": "it147",
    "testId": 147,
    "memberof": "test/utils/create-callable-object.test.js~describe141",
    "testDepth": 1,
    "static": true,
    "longname": "test/utils/create-callable-object.test.js~describe141.it147",
    "access": null,
    "description": "works with instanceof",
    "lineNumber": 60
  },
  {
    "__docId__": 377,
    "kind": "test",
    "name": "it148",
    "testId": 148,
    "memberof": "test/utils/create-callable-object.test.js~describe141",
    "testDepth": 1,
    "static": true,
    "longname": "test/utils/create-callable-object.test.js~describe141.it148",
    "access": null,
    "description": "returns undefined for unknown properties",
    "lineNumber": 83
  },
  {
    "__docId__": 378,
    "kind": "testFile",
    "name": "test/utils/empty-array.test.js",
    "content": "import { EMPTY_ARRAY } from '../../src/utils/empty-array';\nimport { expect } from 'chai';\n/** @test {EMPTY_ARRAY} */\ndescribe('utils/empty-array', () => {\n    it('is an empty readonly array', () => {\n        expect(EMPTY_ARRAY).to.be.a('array');\n        expect(EMPTY_ARRAY).to.have.lengthOf(0);\n        expect(EMPTY_ARRAY).to.be.frozen;\n        expect(() => EMPTY_ARRAY.push(0)).to.throw(TypeError);\n    });\n});\n",
    "static": true,
    "longname": "/home/topaxi/rxtask/tmp/test-build/test/utils/empty-array.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 379,
    "kind": "test",
    "name": "describe149",
    "testId": 149,
    "memberof": "test/utils/empty-array.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/utils/empty-array.test.js~describe149",
    "access": null,
    "description": "utils/empty-array",
    "lineNumber": 4,
    "testTargets": [
      "EMPTY_ARRAY"
    ]
  },
  {
    "__docId__": 380,
    "kind": "test",
    "name": "it150",
    "testId": 150,
    "memberof": "test/utils/empty-array.test.js~describe149",
    "testDepth": 1,
    "static": true,
    "longname": "test/utils/empty-array.test.js~describe149.it150",
    "access": null,
    "description": "is an empty readonly array",
    "lineNumber": 5
  },
  {
    "__docId__": 381,
    "kind": "testFile",
    "name": "test/utils/filter.test.js",
    "content": "import { neq, notNull } from '../../src/utils/filter';\nimport { expect } from 'chai';\n/** @test {neq} */\ndescribe('utils/filter/neq', () => {\n    it('returns a function for inequality', () => {\n        expect(neq(5)).to.be.a('function');\n        expect(neq({})({})).to.be.true;\n        let obj = {};\n        expect(neq(obj)(obj)).to.be.false;\n        expect(neq(5)(5)).to.be.false;\n        expect(neq(5)(6)).to.be.true;\n        expect(neq(5)('6')).to.be.true;\n        expect(neq(null)(undefined)).to.be.true;\n        expect(neq(undefined)(null)).to.be.true;\n        expect(neq(NaN)(NaN), 'NaN').to.be.true;\n    });\n});\n/** @test {notNull} */\ndescribe('utils/filter/notNull', () => {\n    it('returns true for null', () => {\n        expect(notNull(null)).to.be.false;\n        [undefined, 0, 1, false, NaN, '', {}, []].forEach(v => expect(notNull(v)).to.be.true);\n    });\n});\n",
    "static": true,
    "longname": "/home/topaxi/rxtask/tmp/test-build/test/utils/filter.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 382,
    "kind": "test",
    "name": "describe151",
    "testId": 151,
    "memberof": "test/utils/filter.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/utils/filter.test.js~describe151",
    "access": null,
    "description": "utils/filter/neq",
    "lineNumber": 4,
    "testTargets": [
      "neq"
    ]
  },
  {
    "__docId__": 383,
    "kind": "test",
    "name": "it152",
    "testId": 152,
    "memberof": "test/utils/filter.test.js~describe151",
    "testDepth": 1,
    "static": true,
    "longname": "test/utils/filter.test.js~describe151.it152",
    "access": null,
    "description": "returns a function for inequality",
    "lineNumber": 5
  },
  {
    "__docId__": 384,
    "kind": "test",
    "name": "describe153",
    "testId": 153,
    "memberof": "test/utils/filter.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/utils/filter.test.js~describe153",
    "access": null,
    "description": "utils/filter/notNull",
    "lineNumber": 19,
    "testTargets": [
      "notNull"
    ]
  },
  {
    "__docId__": 385,
    "kind": "test",
    "name": "it154",
    "testId": 154,
    "memberof": "test/utils/filter.test.js~describe153",
    "testDepth": 1,
    "static": true,
    "longname": "test/utils/filter.test.js~describe153.it154",
    "access": null,
    "description": "returns true for null",
    "lineNumber": 20
  },
  {
    "__docId__": 386,
    "kind": "testFile",
    "name": "test/utils/pipe.test.js",
    "content": "import { pipe } from '../../src/utils/pipe';\nimport { expect } from 'chai';\nimport { stub, spy } from 'sinon';\n/** @test {pipe} */\ndescribe('utils/pipe', () => {\n    it('returns given value if no function is passed', () => {\n        expect(pipe('test')).to.equal('test');\n    });\n    it('passes values from functions to the next one', () => {\n        let receiveA = spy(stub().returns('B'));\n        let receiveB = spy(stub().returns('C'));\n        let receiveC = spy(stub().returns('D'));\n        expect(pipe('A', receiveA, receiveB, receiveC)).to.equal('D');\n        expect(receiveA).to.have.been.calledWithExactly('A');\n        expect(receiveB).to.have.been.calledWithExactly('B');\n        expect(receiveC).to.have.been.calledWithExactly('C');\n    });\n});\n",
    "static": true,
    "longname": "/home/topaxi/rxtask/tmp/test-build/test/utils/pipe.test.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 387,
    "kind": "test",
    "name": "describe155",
    "testId": 155,
    "memberof": "test/utils/pipe.test.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/utils/pipe.test.js~describe155",
    "access": null,
    "description": "utils/pipe",
    "lineNumber": 5,
    "testTargets": [
      "pipe"
    ]
  },
  {
    "__docId__": 388,
    "kind": "test",
    "name": "it156",
    "testId": 156,
    "memberof": "test/utils/pipe.test.js~describe155",
    "testDepth": 1,
    "static": true,
    "longname": "test/utils/pipe.test.js~describe155.it156",
    "access": null,
    "description": "returns given value if no function is passed",
    "lineNumber": 6
  },
  {
    "__docId__": 389,
    "kind": "test",
    "name": "it157",
    "testId": 157,
    "memberof": "test/utils/pipe.test.js~describe155",
    "testDepth": 1,
    "static": true,
    "longname": "test/utils/pipe.test.js~describe155.it157",
    "access": null,
    "description": "passes values from functions to the next one",
    "lineNumber": 9
  }
]